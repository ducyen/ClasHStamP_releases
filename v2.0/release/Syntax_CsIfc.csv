item,name,ext1st,extnxt,begin,end
file,[cONTAINER]/[Name].cs,"using [cONTAINER];
","using [cONTAINER];
","/* File generated by Đức's ClasHStamP */
using System;[->64]
using System.Collections.Generic;
using boolean = System.Boolean;
",
inheritance,[tYPE],[nAME],", [nAME]",: ,", "
template,<[nAME]>,[nAME],", [nAME]",[nAME],[nAME]
class,"namespace [cONTAINER] {
[->][sCOPE] interface [nAME][mODIFIER][tYPE]
[vALUE]","[->]    where [nAME]: [tYPE]
","[->]    where [nAME]: [tYPE]
","[->]{
","[->]}
}
"
b_enum,"public  enum [Name] {
","    [NAME],[->64][dESC]
","    [NAME],[->64][dESC]
",,"    [NAME]_NUM
};
const TCHAR* [Name]_toString( [NAME] value );
"
c_enum,"protected  enum [Name] {
","    [NAME],[->64][dESC]
","    [NAME],[->64][dESC]
",,"    [NAME]_NUM
};
"
i_enum,"private enum [Name] {
","    [NAME],[->64][dESC]
","    [NAME],[->64][dESC]
",,"    [NAME]_NUM
};
"
b_struct,"public  struct [Name] {
","    [tYPE] [nAME][mODIFIER];[->64][dESC]
","    [tYPE] [nAME][mODIFIER];[->64][dESC]
","public  struct [Name]: [TYPE]{
","[->]};
"
c_struct,"protected  struct [Name] {
","    [tYPE] [nAME][mODIFIER];[->64][dESC]
","    [tYPE] [nAME][mODIFIER];[->64][dESC]
","protected  struct [Name]: [TYPE]{
","[->]};
"
i_struct,"private struct [Name] {
","    [tYPE] [nAME][mODIFIER];[->64][dESC]
","    [tYPE] [nAME][mODIFIER];[->64][dESC]
","private struct [Name]: [TYPE]{
","};
"
constructor,,,,,
attr_group,,,,,
ctor_call,,,,,
__s_attr,"[->][scope][tYPE] [nAME];[->64][dESC]
",,,,
__o_attr,"[->][scope][tYPE] [nAME];[->64][dESC]
",,,,
__r_attr,"[->][scope]  [tYPE] [nAME];[->64][dESC]
",,,,
_ms_attr,"[->][scope]  List<[tYPE]> [nAME];[->64][dESC]
",,,,
_mo_attr,"[->][scope]  List<[tYPE]> [nAME];[->64][dESC]
",,,,
_mr_attr,"[->][scope]  List<[tYPE]> [nAME];[->64][dESC]
",,,,
c_s_attr,"[->][scope]readonly [tYPE] [nAME];[->64][dESC]
",,,,
c_o_attr,"[->][scope]readonly [tYPE] [nAME];[->64][dESC]
",,,,
c_r_attr,"[->][scope]readonly [tYPE] [nAME];[->64][dESC]
",,,,
cms_attr,"[->][scope]readonly [tYPE][] [nAME];[->64][dESC]
",,,,
cmo_attr,"[->][scope]readonly [tYPE][] [nAME];[->64][dESC]
",,,,
cmr_attr,"[->][scope]readonly [tYPE][] [nAME];[->64][dESC]
",,,,
s_s_attr,"[->][scope]static [tYPE] [nAME] = [vALUE];[->64][dESC]
","[->][scope]const [tYPE] [nAME] = [vALUE];[->64][dESC]
",,,"[->][scope]static [tYPE] [nAME];[->64][dESC]
"
s_o_attr,"[->][scope]static [tYPE] [nAME] = [vALUE];[->64][dESC]
","[->][scope]const [tYPE] [nAME] = [vALUE];[->64][dESC]
",,,"[->][scope]static [tYPE] [nAME];[->64][dESC]
"
s_r_attr,"[->][scope]static [tYPE] [nAME] = [vALUE];[->64][dESC]
","[->][scope]const [tYPE] [nAME] = [vALUE];[->64][dESC]
",,,"[->][scope]static [tYPE] [nAME];[->64][dESC]
"
sms_attr,"[->][scope]static [tYPE][] [nAME] = [vALUE];[->64][dESC]
","[->][scope]const [tYPE][] [nAME] = [vALUE];[->64][dESC]
",,,"[->][scope]static [tYPE][] [nAME];[->64][dESC]
"
smo_attr,"[->][scope]static [tYPE][] [nAME] = [vALUE];[->64][dESC]
","[->][scope]const [tYPE][] [nAME] = [vALUE];[->64][dESC]
",,,"[->][scope]static [tYPE][] [nAME];[->64][dESC]
"
smr_attr,"[->][scope]static [tYPE][] [nAME] = [vALUE];[->64][dESC]
","[->][scope]const [tYPE][] [nAME] = [vALUE];[->64][dESC]
",,,"[->][scope]static [tYPE][] [nAME];[->64][dESC]
"
p_s_attr,"[->][tYPE][mODIFIER] [nAME] {
[vALUE][->]}
","[->]    [sCOPE]get[vALUE]
","[->]    [sCOPE]set[vALUE]
",;,;
p_o_attr,"[->][tYPE][mODIFIER] [nAME] {
[vALUE][->]}
","[->]    [sCOPE]get[vALUE]
","[->]    [sCOPE]set[vALUE]
",;,;
p_r_attr,"[->][tYPE][mODIFIER] [nAME] {
[vALUE][->]}
","[->]    [sCOPE]get[vALUE]
","[->]    [sCOPE]set[vALUE]
",;,;
pms_attr,"[->][tYPE][mODIFIER] [nAME] {
[vALUE][->]}
","[->]    [sCOPE]get[vALUE]
","[->]    [sCOPE]set[vALUE]
",;,;
pmo_attr,"[->][tYPE][mODIFIER] [nAME] {
[vALUE][->]}
","[->]    [sCOPE]get[vALUE]
","[->]    [sCOPE]set[vALUE]
",;,;
pmr_attr,"[->][tYPE][mODIFIER] [nAME] {
[vALUE][->]}
","[->]    [sCOPE]get[vALUE]
","[->]    [sCOPE]set[vALUE]
",;,;
vptr_impl,,,,,
__c_oper,[->][tYPE] [nAME](,"
[->][sCOPE][tYPE] [nAME]",",
[->][sCOPE][tYPE] [nAME]","
[->])",";
"
__b_oper,[->][tYPE] [nAME](,"
[->][sCOPE][tYPE] [nAME]",",
[->][sCOPE][tYPE] [nAME]","
[->])",";
"
vptr_decl,,,,,
_ac_oper,[->][tYPE] [nAME](,"
[->][sCOPE][tYPE] [nAME]",",
[->][sCOPE][tYPE] [nAME]","
[->])",";
"
_ab_oper,[->][tYPE] [nAME](,"
[->][sCOPE][tYPE] [nAME]",",
[->][sCOPE][tYPE] [nAME]","
[->])",";
"
l_i_oper,[->][tYPE] [nAME](,"
[->][sCOPE][tYPE] [nAME]",",
[->][sCOPE][tYPE] [nAME]","
[->])",";
"
l_c_oper,[->][tYPE] [nAME](,"
[->][sCOPE][tYPE] [nAME]",",
[->][sCOPE][tYPE] [nAME]","
[->])",";
"
l_b_oper,[->][tYPE] [nAME](,"
[->][sCOPE][tYPE] [nAME]",",
[->][sCOPE][tYPE] [nAME]","
[->])",";
"
lai_oper,,,,,
vptr_call,,,,,
s_i_oper,[->]private static [tYPE] [nAME](,"
[->][sCOPE][tYPE] [nAME]",",
[->][sCOPE][tYPE] [nAME]","
[->])",";
"
s_c_oper,[->]protected  static [tYPE] [nAME](,"
[->][sCOPE][tYPE] [nAME]",",
[->][sCOPE][tYPE] [nAME]","
[->])",";
"
s_b_oper,[->]public  static [tYPE] [nAME](,"
[->][sCOPE][tYPE] [nAME]",",
[->][sCOPE][tYPE] [nAME]","
[->])",";
"
sai_oper,,,,,
sab_oper,,,,,
event_decl,"[->]public enum _EventId {
","[->][nAME],
","[->][nAME],
",,"[->]    [nAME]EventNum
[->]};
"
state_decl,,,,"[->]public class [nAME]: Pseudostate<[nAME]>{};
",
state_entry,,,,,
state_exit,,,,,
state_impl,"[->]public override bool Reset(Context pContext, Statemachine pParentStm, Pseudostate pEntryPoint) {
[->]    m_pParentStm = pParentStm;
[->]    if (pEntryPoint == null) {
[->]        if (IsFinished()) {
[->]            m_pPseudostate = [mODIFIER].GetInstance();
[->]        }
[->]    } else {
[->]        if (IsFinished()) {
[->]            m_pPseudostate = pEntryPoint;
[->]            return false;
[->]        } else {
[->]            m_pPseudostate = pEntryPoint;
[->]        }                    
[->]    }
[->]    if (pEntryPoint != null) {
[vALUE][->]    }
[->]    return RunToCompletion(pContext);
[->]}
[->]public override bool EventProc(Context pContext, int nEventId, EventParams pParams){
[->]    bool bResult = false;
[->]    m_pLCAState = TopState.GetInstance();
",,,,"[->]    bResult |= m_pCurrentState.EventProc(pContext, this, nEventId, pParams);
[->]    RunToCompletion(pContext);
[->]    return bResult;
[->]}
[->]public override bool IsIn(TopState pCompositeState) {
[vALUE][->]    if (base.IsIn(pCompositeState)) { return true; }
[->]    return false;
[->]}
[->]public override bool Abort(Context pContext) {
[->]    m_pSourceState = [nAME].GetInstance();
[->]    BgnTrans(pContext, [nAME].GetInstance());
[->]    EndTrans(pContext);
[->]    return true;
[->]}
[->]public override bool IsFinished() {
[->]    return m_pCurrentState == [nAME].GetInstance() && m_pCurrentState == m_pPseudostate;
[->]}
[->]public [sCOPE](): base([nAME].GetInstance(), [nAME].GetInstance()) {}
"
transition,"[->]public class [nAME]: [cONTAINER] {
[->]    private static TopState singleInstance = new [nAME]();
[->]    public static new TopState GetInstance() { return singleInstance; }
[->]    public override void Entry(Context pContext, Statemachine pStm){
[->]        if( pStm.IsEnterable(GetInstance()) ){
[->]            base.Entry( pContext, pStm );
[->]            Console.WriteLine(GetInstance().GetType() + ""entry"");
[vALUE][->]        }
[->]    }
[->]    public override bool EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
[->]        bool bResult = false;
[->]        pStm.m_pSourceState = GetInstance();
","[->]    switch( (_EventId)nEventId ){
[->]    case _EventId.[nAME]:{
","[->]    } break;
[->]    case _EventId.[nAME]:{
","[->]    } break;
[->]    default: break;
[->]    }
","[->]        return bResult ? bResult : base.EventProc( pContext, pStm, nEventId, pParams );
[->]    }
[->]    public override void Exit(Context pContext, Statemachine pStm) {
[->]        if (pStm.IsExitable(GetInstance())) {
[vALUE][->]            Console.WriteLine(GetInstance().GetType() + ""exit"");
[->]            base.Exit(pContext, pStm);
[->]        }
[->]    }
[->]};
"
trans_top,"[->]public class [nAME]: [cONTAINER] {
[->]    private static TopState singleInstance = new [nAME]();
[->]    public static new TopState GetInstance() { return singleInstance; }
[->]    public override void Entry(Context pContext, Statemachine pStm){
[->]        if( pStm.IsEnterable(GetInstance()) ){
[->]            Console.WriteLine(GetInstance().GetType() + ""entry"");
[vALUE][->]        }
[->]    }
[->]    public override bool EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
[->]        bool bResult = false;
[->]        pStm.m_pSourceState = GetInstance();
","[->]    switch( (_EventId)nEventId ){
[->]    case _EventId.[nAME]:{
","[->]    } break;
[->]    case _EventId.[nAME]:{
","[->]    } break;
[->]    default: break;
[->]    }
","[->]        return bResult;
[->]    }
[->]    public override void Exit(Context pContext, Statemachine pStm) {
[->]        if (pStm.IsExitable(GetInstance())) {
[vALUE][->]            Console.WriteLine(GetInstance().GetType() + ""exit"");
[->]        }
[->]    }
[->]};
"
branch,"[->]    else {
","[->]    if ([nAME]) {
","[->]    } else if ([nAME]) {
","[->]    } else {
","[->]    }
"
comment,/**< [nAME] [->32]*/," * [nAME]
"," * [nAME]
","/**
"," */
"
action,"[->][NAME]_PARAMS pParams = ( [NAME]_PARAMS )pParams;
",,"[->][nAME]
","[->]    pStm.BgnTrans( pContext, [nAME].GetInstance() );
[mODIFIER][->]    pStm.EndTrans( pContext );
[->]    bResult = true;
","[mODIFIER][->]    bResult = true;
"
param_dir,,out ,ref ,1,.
statemachine,"using Base;
","[->][tYPE][mODIFIER] mainStm = new [tYPE][mODIFIER]();[->64][dESC]
",,"[->]class [Name]: Statemachine {
[->]    public class [tYPE]: TopState {
[->]        private static TopState singleInstance = new [tYPE]();
[->]        public static new TopState GetInstance() { return singleInstance; }
[->]    }
","[->]};
"
default_trans,"[->]public override bool DefaultTrans( Context pContext ){
[->]    bool bResult = false;
[->]    Statemachine pStm = this;
","[->]do {
[->]    if (m_pCurrentState == [mODIFIER].GetInstance() && m_pPseudostate == [sCOPE].[nAME].GetInstance()) {
","[->]    } else if (m_pCurrentState == [mODIFIER].GetInstance() && m_pPseudostate == [cONTAINER].[nAME].GetInstance()) {
","[->]    } else if (m_pCurrentState != m_pPseudostate && m_pPseudostate is [nAME]) {
[->]        pStm.BgnTrans( pContext, m_pPseudostate as TopState );
[->]        pStm.EndTrans( pContext );
[->]    } else {
[->]    }
[->]} while (false);
","[->]    return bResult;
[->]}
"
substm_impl,"[->]    if (!(([cONTAINER])pStm).m_[nAME][sCOPE].IsIn([mODIFIER].[vALUE].GetInstance())) { break; }
","[->]    if( !m_[nAME][tYPE].IsFinished() ){ break; }
","[->]bResult |= m_[nAME][tYPE].EventProc( pContext, nEventId, pParams );
","[->]    (([sCOPE])pStm).m_[nAME][tYPE].Reset( pContext, pStm, null );
","[->]    (([sCOPE])pStm).m_[nAME][tYPE].Abort( pContext );
"
substm_decl,,"[->][tYPE][mODIFIER] m_[nAME][tYPE] = new [tYPE][mODIFIER]();[->64][dESC]
","[->]bResult |= m_[nAME][tYPE].DefaultTrans( pContext );
","[->]    pStm.m_pParentStm.m_pPseudostate = [sCOPE].[vALUE].GetInstance();
","[->]    (([cONTAINER])pStm).m_[nAME][sCOPE].Reset(pContext, pStm, [mODIFIER].[vALUE].GetInstance());
"
history,"[->]TopState m_p[Name]History;
","[->]m_p[Name]History( null ),\
","[->]    (([sCOPE])pStm).m_p[Name]History = [vALUE].GetInstance();
","[->]    if (( ( [sCOPE] )pStm ).m_p[nAME]History != null) {
[->]        pStm.BgnTrans( pContext, ( ( [sCOPE] )pStm ).m_p[nAME]History );
[mODIFIER][->]        pStm.EndTrans( pContext );
[->]        bResult = true;
[->]        break;
[->]    }
","[->]    pStm.BgnTrans( pContext, [cONTAINER].GetInstance(), [nAME].GetInstance() );
[mODIFIER][->]    pStm.EndTrans( pContext );
[->]    bResult = true;
"
junction,"[->]    pStm.m_pPseudostate = [sCOPE].[vALUE].GetInstance();
","[->]do {
[->]    if (m_pPseudostate == [sCOPE].[nAME].GetInstance()) {
","[->]    } else if (m_pPseudostate == [cONTAINER].[nAME].GetInstance()) {
",(([tYPE])pContext).IsIn([mODIFIER].[vALUE].GetInstance()),"
[->]     || (([tYPE])pContext).IsIn([mODIFIER].[vALUE].GetInstance())"
api_call,"[->]public bool Start() {
[->]    mainStm.Abort(this);
[->]    return mainStm.Reset(this, null, null);
[->]}
[->]public bool EventProc(int nEventId, EventParams pParams) {
[->]    return mainStm.EventProc(this, nEventId, pParams);
[->]}
[->]public bool IsIn(TopState pState) {
[->]    return mainStm.IsIn(pState);
[->]}
","[->]    pStm.m_bIsExternTrans = true;
","[->]    if (m_[nAME][tYPE].IsIn(pCompositeState)) { return true; }
","[->]        m_[nAME][sCOPE].Reset( pContext, this, pEntryPoint );
",.
friend,,,,,
visibility,internal ,,protected ,public ,private 
