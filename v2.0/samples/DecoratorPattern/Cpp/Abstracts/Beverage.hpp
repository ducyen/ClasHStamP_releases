#pragma once
/* File generated by Đức's ClasHStamP */
#include "Generic/CommonInclude.h"

class Beverage{
    public: virtual double cost(
    ) = 0;
    protected: String description;
    public: struct { Beverage* pContainer; friend Beverage;
        operator String () const { return pContainer->getDescription(); }
        String& operator = (const String& value) { pContainer->setDescription(value); }
    } m_description;
    protected: virtual String getDescription() const { return description; }
    protected: virtual String& setDescription(const String& value) { return description = value; }
    friend class Main;
    public:  Beverage(
        String _description
    ): description( _description )
    {
        m_description.pContainer = this;
    }                                                                                           
};
