/* File generated by Đức's ClasHStamP */
package model;

import java.io.*;
import java.util.*;
import model.*;
import base.*;

public  class ContextImpl extends Context
{
    public  enum AnEnum {
        One,                                                    
        Two,                                                    
        Three,                                                  
        AnEnum_NUM
    };
    public static class E1Params extends EventParams{
        public AnEnum x;                                        
    };
    public enum _EventId {
        E0,
        E1,
        E2,
        E3,
        E4,
        E5,
        Num
    };
    public boolean Start() {
            mainStm.Abort(this);
        return mainStm.Reset(this, null, null);
    }
    public boolean EventProc(int nEventId, EventParams pParams) {
        return mainStm.EventProc(this, nEventId, pParams);
    }
    public boolean IsIn(TopState pState) {
        return mainStm.IsIn(pState);
    }
    protected void protectedMethod(
    ){
    } /* ContextImpl.protectedMethod */

    protected static boolean checkE1Params(
        EventParams e
    ){
    	return ((E1Params)e).x == AnEnum.Two;
    } /* ContextImpl.checkE1Params */
    static class S82Stm extends Statemachine {
        public static class S82Top extends TopState {
            private static TopState singleInstance = new S82Top();
            public static TopState GetInstance() { return singleInstance; }
        }
        public static class InitPt extends Pseudostate {
            private static Pseudostate singleInstance = new InitPt();
            public static Pseudostate GetInstance() { return singleInstance; }
        }
        public static class S821 extends S82Top {
            private static TopState singleInstance = new S821();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    System.out.println(GetInstance().getClass() + "entry");
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                return bResult;
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                }
            }
        };
        public static class S822 extends S82Top {
            private static TopState singleInstance = new S822();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    System.out.println(GetInstance().getClass() + "entry");
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                switch( _EventId.values()[nEventId] ){
                case E1:{
                    E1Params e = ( E1Params )pParams;
                    pStm.BgnTrans( pContext, S821.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                default: break;
                }
                return bResult;
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                }
            }
        };
        public boolean DefaultTrans( Context pContext ){
            boolean bResult = false;
            Statemachine pStm = this;
            do {
                if (m_pCurrentState == S82Top.GetInstance() && m_pPseudostate == S82Stm.InitPt.GetInstance()) {
                    pStm.BgnTrans( pContext, S822.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } else if (m_pCurrentState != m_pPseudostate && m_pPseudostate instanceof S82Top) {
                    pStm.BgnTrans( pContext, (TopState)m_pPseudostate );
                    pStm.EndTrans( pContext );
                } else {
                }
            } while (false);
            return bResult;
        }
        public boolean Reset(Context pContext, Statemachine pParentStm, Pseudostate pEntryPoint) {
            m_pParentStm = pParentStm;
            if (pEntryPoint == null) {
                if (IsFinished()) {
                    m_pPseudostate = InitPt.GetInstance();
                }
            } else {
                if (IsFinished()) {
                    m_pPseudostate = pEntryPoint;
                    return false;
                } else {
                    m_pPseudostate = pEntryPoint;
                }                    
            }
            if (pEntryPoint != null) {
            }
            return RunToCompletion(pContext);
        }
        public boolean EventProc(Context pContext, int nEventId, EventParams pParams){
            boolean bResult = false;
            m_pLCAState = TopState.GetInstance();
            bResult = m_pCurrentState.EventProc(pContext, this, nEventId, pParams);
            RunToCompletion(pContext);
            return bResult;
        }
        public boolean IsIn(TopState pCompositeState) {
            if (super.IsIn(pCompositeState)) { return true; }
            return false;
        }
        public boolean Abort(Context pContext) {
            m_pSourceState = S82Top.GetInstance();
            BgnTrans(pContext, S82Top.GetInstance());
            EndTrans(pContext);
            return true;
        }
        public boolean IsFinished() {
            return m_pCurrentState == S82Top.GetInstance() && m_pCurrentState == m_pPseudostate;
        }
        public S82Stm(){ super(S82Top.GetInstance(), S82Top.GetInstance()); }
    };
    static class S83Stm extends Statemachine {
        public static class S83Top extends TopState {
            private static TopState singleInstance = new S83Top();
            public static TopState GetInstance() { return singleInstance; }
        }
        public static class InitPt extends Pseudostate {
            private static Pseudostate singleInstance = new InitPt();
            public static Pseudostate GetInstance() { return singleInstance; }
        }
        public static class S831 extends S83Top {
            private static TopState singleInstance = new S831();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    System.out.println(GetInstance().getClass() + "entry");
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                return bResult;
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                }
            }
        };
        public static class S832 extends S83Top {
            private static TopState singleInstance = new S832();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    System.out.println(GetInstance().getClass() + "entry");
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                return bResult;
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                }
            }
        };
        public boolean DefaultTrans( Context pContext ){
            boolean bResult = false;
            Statemachine pStm = this;
            do {
                if (m_pCurrentState == S83Top.GetInstance() && m_pPseudostate == S83Stm.InitPt.GetInstance()) {
                    pStm.BgnTrans( pContext, S831.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } else if (m_pCurrentState != m_pPseudostate && m_pPseudostate instanceof S83Top) {
                    pStm.BgnTrans( pContext, (TopState)m_pPseudostate );
                    pStm.EndTrans( pContext );
                } else {
                }
            } while (false);
            return bResult;
        }
        public boolean Reset(Context pContext, Statemachine pParentStm, Pseudostate pEntryPoint) {
            m_pParentStm = pParentStm;
            if (pEntryPoint == null) {
                if (IsFinished()) {
                    m_pPseudostate = InitPt.GetInstance();
                }
            } else {
                if (IsFinished()) {
                    m_pPseudostate = pEntryPoint;
                    return false;
                } else {
                    m_pPseudostate = pEntryPoint;
                }                    
            }
            if (pEntryPoint != null) {
            }
            return RunToCompletion(pContext);
        }
        public boolean EventProc(Context pContext, int nEventId, EventParams pParams){
            boolean bResult = false;
            m_pLCAState = TopState.GetInstance();
            bResult = m_pCurrentState.EventProc(pContext, this, nEventId, pParams);
            RunToCompletion(pContext);
            return bResult;
        }
        public boolean IsIn(TopState pCompositeState) {
            if (super.IsIn(pCompositeState)) { return true; }
            return false;
        }
        public boolean Abort(Context pContext) {
            m_pSourceState = S83Top.GetInstance();
            BgnTrans(pContext, S83Top.GetInstance());
            EndTrans(pContext);
            return true;
        }
        public boolean IsFinished() {
            return m_pCurrentState == S83Top.GetInstance() && m_pCurrentState == m_pPseudostate;
        }
        public S83Stm(){ super(S83Top.GetInstance(), S83Top.GetInstance()); }
    };
    static class SharedStm extends Statemachine {
        public static class SharedTop extends TopState {
            private static TopState singleInstance = new SharedTop();
            public static TopState GetInstance() { return singleInstance; }
        }
        public static class Entry1 extends Pseudostate {
            private static Pseudostate singleInstance = new Entry1();
            public static Pseudostate GetInstance() { return singleInstance; }
        }
        public static class Exit1 extends Pseudostate {
            private static Pseudostate singleInstance = new Exit1();
            public static Pseudostate GetInstance() { return singleInstance; }
        }
        public static class InitPt extends Pseudostate {
            private static Pseudostate singleInstance = new InitPt();
            public static Pseudostate GetInstance() { return singleInstance; }
        }
        public static class Shared1 extends SharedTop {
            private static TopState singleInstance = new Shared1();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    System.out.println(GetInstance().getClass() + "entry");
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                switch( _EventId.values()[nEventId] ){
                case E0:{
                    pStm.BgnTrans( pContext, Shared2.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                default: break;
                }
                return bResult;
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                }
            }
        };
        public static class Shared2 extends SharedTop {
            private static TopState singleInstance = new Shared2();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    System.out.println(GetInstance().getClass() + "entry");
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                switch( _EventId.values()[nEventId] ){
                case E2:{
                    pStm.BgnTrans( pContext, SharedTop.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                case E3:{
                    pStm.BgnTrans( pContext, SharedTop.GetInstance() );
                    pStm.m_pParentStm.m_pPseudostate = SharedStm.Exit1.GetInstance();
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                default: break;
                }
                return bResult;
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                }
            }
        };
        public boolean DefaultTrans( Context pContext ){
            boolean bResult = false;
            Statemachine pStm = this;
            do {
                if (m_pPseudostate == SharedStm.Entry1.GetInstance()) {
                    pStm.BgnTrans( pContext, Shared1.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } else if (m_pCurrentState == SharedTop.GetInstance() && m_pPseudostate == SharedStm.InitPt.GetInstance()) {
                    pStm.BgnTrans( pContext, Shared1.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } else if (m_pCurrentState != m_pPseudostate && m_pPseudostate instanceof SharedTop) {
                    pStm.BgnTrans( pContext, (TopState)m_pPseudostate );
                    pStm.EndTrans( pContext );
                } else {
                }
            } while (false);
            return bResult;
        }
        public boolean Reset(Context pContext, Statemachine pParentStm, Pseudostate pEntryPoint) {
            m_pParentStm = pParentStm;
            if (pEntryPoint == null) {
                if (IsFinished()) {
                    m_pPseudostate = InitPt.GetInstance();
                }
            } else {
                if (IsFinished()) {
                    m_pPseudostate = pEntryPoint;
                    return false;
                } else {
                    m_pPseudostate = pEntryPoint;
                }                    
            }
            if (pEntryPoint != null) {
            }
            return RunToCompletion(pContext);
        }
        public boolean EventProc(Context pContext, int nEventId, EventParams pParams){
            boolean bResult = false;
            m_pLCAState = TopState.GetInstance();
            bResult = m_pCurrentState.EventProc(pContext, this, nEventId, pParams);
            RunToCompletion(pContext);
            return bResult;
        }
        public boolean IsIn(TopState pCompositeState) {
            if (super.IsIn(pCompositeState)) { return true; }
            return false;
        }
        public boolean Abort(Context pContext) {
            m_pSourceState = SharedTop.GetInstance();
            BgnTrans(pContext, SharedTop.GetInstance());
            EndTrans(pContext);
            return true;
        }
        public boolean IsFinished() {
            return m_pCurrentState == SharedTop.GetInstance() && m_pCurrentState == m_pPseudostate;
        }
        public SharedStm(){ super(SharedTop.GetInstance(), SharedTop.GetInstance()); }
    };
    static class MainStm extends Statemachine {
        public static class MainTop extends TopState {
            private static TopState singleInstance = new MainTop();
            public static TopState GetInstance() { return singleInstance; }
        }
        SharedStm m_S6SharedStm = new SharedStm();              
        S82Stm m_S82S82Stm = new S82Stm();                      
        S83Stm m_S83S83Stm = new S83Stm();                      
        SharedStm m_S9SharedStm = new SharedStm();              
        TopState m_pS4History;
        TopState m_pS7History;
        public static class InitPt0 extends Pseudostate {
            private static Pseudostate singleInstance = new InitPt0();
            public static Pseudostate GetInstance() { return singleInstance; }
        }
        public static class InitPt1 extends Pseudostate {
            private static Pseudostate singleInstance = new InitPt1();
            public static Pseudostate GetInstance() { return singleInstance; }
        }
        public static class InitPt2 extends Pseudostate {
            private static Pseudostate singleInstance = new InitPt2();
            public static Pseudostate GetInstance() { return singleInstance; }
        }
        public static class Junction extends Pseudostate {
            private static Pseudostate singleInstance = new Junction();
            public static Pseudostate GetInstance() { return singleInstance; }
        }
        public static class InitPt4 extends Pseudostate {
            private static Pseudostate singleInstance = new InitPt4();
            public static Pseudostate GetInstance() { return singleInstance; }
        }
        public static class InitPt3 extends Pseudostate {
            private static Pseudostate singleInstance = new InitPt3();
            public static Pseudostate GetInstance() { return singleInstance; }
        }
        public static class S1 extends MainTop {
            private static TopState singleInstance = new S1();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    System.out.println(GetInstance().getClass() + "entry");
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                switch( _EventId.values()[nEventId] ){
                case E1:{
                    E1Params e = ( E1Params )pParams;
                    if (checkE1Params(e)) {
                        pStm.BgnTrans( pContext, S2.GetInstance(), InitPt1.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    }
                } break;
                case E2:{
                    int n = InputValue("Enter condition1: ");
                    if (n == 0) {
                        if (( ( MainStm )pStm ).m_pS4History != null) {
                            pStm.BgnTrans( pContext, ( ( MainStm )pStm ).m_pS4History );
                            DisplayMsg("Do an action4");
                            pStm.EndTrans( pContext );
                            bResult = true;
                            break;
                        }
                        pStm.BgnTrans( pContext, S4.GetInstance(), InitPt2.GetInstance() );
                        DisplayMsg("Do an action4");
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } else if (InputValue("Enter condition2: ") == 1) {
                        pStm.BgnTrans( pContext, S5.GetInstance() );
                        DisplayMsg("Do an action1");
                        DisplayMsg("Do an action2");
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } else {
                        pStm.BgnTrans( pContext, S7.GetInstance(), InitPt3.GetInstance() );
                        DisplayMsg("Do an action1");
                        DisplayMsg("Do an action3");
                        pStm.EndTrans( pContext );
                        bResult = true;
                    }
                } break;
                default: break;
                }
                return bResult;
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                }
            }
        };
        public static class S2 extends MainTop {
            private static TopState singleInstance = new S2();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    System.out.println(GetInstance().getClass() + "entry");
                    DisplayMsg("Do something");
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                switch( _EventId.values()[nEventId] ){
                case E2:{
                    pStm.BgnTrans( pContext, S3.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                case E3:{
                    if (( ( MainStm )pStm ).m_pS4History != null) {
                        pStm.BgnTrans( pContext, ( ( MainStm )pStm ).m_pS4History );
                        pStm.EndTrans( pContext );
                        bResult = true;
                        break;
                    }
                    pStm.BgnTrans( pContext, S4.GetInstance(), InitPt2.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                default: break;
                }
                return bResult;
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    DisplayMsg("Do another thing");
                    System.out.println(GetInstance().getClass() + "exit");
                }
            }
        };
        public static class S21 extends S2 {
            private static TopState singleInstance = new S21();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    super.Entry( pContext, pStm );
                    System.out.println(GetInstance().getClass() + "entry");
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                switch( _EventId.values()[nEventId] ){
                case E0:{
                    pStm.BgnTrans( pContext, S22.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                case E1:{
                    E1Params e = ( E1Params )pParams;
                    pStm.BgnTrans( pContext, S3.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                default: break;
                }
                return bResult ? bResult : super.EventProc( pContext, pStm, nEventId, pParams );
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                    super.Exit(pContext, pStm);
                }
            }
        };
        public static class S22 extends S2 {
            private static TopState singleInstance = new S22();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    super.Entry( pContext, pStm );
                    System.out.println(GetInstance().getClass() + "entry");
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                switch( _EventId.values()[nEventId] ){
                case E0:{
                    pStm.BgnTrans( pContext, S2.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                default: break;
                }
                return bResult ? bResult : super.EventProc( pContext, pStm, nEventId, pParams );
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                    super.Exit(pContext, pStm);
                }
            }
        };
        public static class S3 extends MainTop {
            private static TopState singleInstance = new S3();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    System.out.println(GetInstance().getClass() + "entry");
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                switch( _EventId.values()[nEventId] ){
                case E0:{
                    pStm.BgnTrans( pContext, MainTop.GetInstance() );
                    pStm.m_pPseudostate = MainStm.Junction.GetInstance();
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                default: break;
                }
                return bResult;
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                }
            }
        };
        public static class S4 extends MainTop {
            private static TopState singleInstance = new S4();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    System.out.println(GetInstance().getClass() + "entry");
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                switch( _EventId.values()[nEventId] ){
                case E2:{
                    pStm.m_bIsExternTrans = true;
                    pStm.BgnTrans( pContext, S42.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                default: break;
                }
                return bResult;
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                }
            }
        };
        public static class S41 extends S4 {
            private static TopState singleInstance = new S41();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    super.Entry( pContext, pStm );
                    System.out.println(GetInstance().getClass() + "entry");
                    ((MainStm)pStm).m_pS4History = S41.GetInstance();
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                switch( _EventId.values()[nEventId] ){
                case E1:{
                    E1Params e = ( E1Params )pParams;
                    pStm.BgnTrans( pContext, S42.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                default: break;
                }
                return bResult ? bResult : super.EventProc( pContext, pStm, nEventId, pParams );
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                    super.Exit(pContext, pStm);
                }
            }
        };
        public static class S42 extends S4 {
            private static TopState singleInstance = new S42();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    super.Entry( pContext, pStm );
                    System.out.println(GetInstance().getClass() + "entry");
                    ((MainStm)pStm).m_pS4History = S42.GetInstance();
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                switch( _EventId.values()[nEventId] ){
                case E1:{
                    E1Params e = ( E1Params )pParams;
                    pStm.BgnTrans( pContext, S4.GetInstance() );
                    ((MainStm)pStm).m_pS4History = S4.GetInstance();
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                default: break;
                }
                return bResult ? bResult : super.EventProc( pContext, pStm, nEventId, pParams );
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                    super.Exit(pContext, pStm);
                }
            }
        };
        public static class S6 extends MainTop {
            private static TopState singleInstance = new S6();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    System.out.println(GetInstance().getClass() + "entry");
                    ((MainStm)pStm).m_S6SharedStm.Reset( pContext, pStm, null );
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                switch( _EventId.values()[nEventId] ){
                case E3:{
                    pStm.BgnTrans( pContext, S9.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                case E4:{
                    if (( ( MainStm )pStm ).m_pS4History != null) {
                        pStm.BgnTrans( pContext, ( ( MainStm )pStm ).m_pS4History );
                        pStm.EndTrans( pContext );
                        bResult = true;
                        break;
                    }
                    pStm.BgnTrans( pContext, S4.GetInstance(), InitPt2.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                default: break;
                }
                return bResult;
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    ((MainStm)pStm).m_S6SharedStm.Abort( pContext );
                    System.out.println(GetInstance().getClass() + "exit");
                }
            }
        };
        public static class S8 extends MainTop {
            private static TopState singleInstance = new S8();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    System.out.println(GetInstance().getClass() + "entry");
                    ((MainStm)pStm).m_S82S82Stm.Reset( pContext, pStm, null );
                    ((MainStm)pStm).m_S83S83Stm.Reset( pContext, pStm, null );
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                switch( _EventId.values()[nEventId] ){
                case E4:{
                    pStm.BgnTrans( pContext, MainTop.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                case E5:{
                    if (( ( MainStm )pStm ).m_pS7History != null) {
                        pStm.BgnTrans( pContext, ( ( MainStm )pStm ).m_pS7History );
                        pStm.EndTrans( pContext );
                        bResult = true;
                        break;
                    }
                } break;
                default: break;
                }
                return bResult;
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    ((MainStm)pStm).m_S82S82Stm.Abort( pContext );
                    ((MainStm)pStm).m_S83S83Stm.Abort( pContext );
                    System.out.println(GetInstance().getClass() + "exit");
                }
            }
        };
        public static class S811 extends S8 {
            private static TopState singleInstance = new S811();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    super.Entry( pContext, pStm );
                    System.out.println(GetInstance().getClass() + "entry");
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                switch( _EventId.values()[nEventId] ){
                case E1:{
                    E1Params e = ( E1Params )pParams;
                    pStm.BgnTrans( pContext, S812.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                case E3:{
                    if (((ContextImpl)pContext).IsIn(S83Stm.S831.GetInstance())
                     || ((ContextImpl)pContext).IsIn(S82Stm.S821.GetInstance())) {
                        pStm.BgnTrans( pContext, S812.GetInstance() );
                        ((MainStm)pStm).m_S83S83Stm.Reset(pContext, pStm, S83Stm.S832.GetInstance());
                        pStm.EndTrans( pContext );
                        bResult = true;
                    }
                } break;
                default: break;
                }
                return bResult ? bResult : super.EventProc( pContext, pStm, nEventId, pParams );
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                    super.Exit(pContext, pStm);
                }
            }
        };
        public static class S813 extends S8 {
            private static TopState singleInstance = new S813();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    super.Entry( pContext, pStm );
                    System.out.println(GetInstance().getClass() + "entry");
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                switch( _EventId.values()[nEventId] ){
                case E5:{
                    if (((ContextImpl)pContext).IsIn(S82Stm.S822.GetInstance())) {
                        pStm.BgnTrans( pContext, S10.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    }
                } break;
                default: break;
                }
                return bResult ? bResult : super.EventProc( pContext, pStm, nEventId, pParams );
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                    super.Exit(pContext, pStm);
                }
            }
        };
        public static class S812 extends S8 {
            private static TopState singleInstance = new S812();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    super.Entry( pContext, pStm );
                    System.out.println(GetInstance().getClass() + "entry");
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                switch( _EventId.values()[nEventId] ){
                case E1:{
                    E1Params e = ( E1Params )pParams;
                    if (((ContextImpl)pContext).IsIn(S82Stm.S821.GetInstance())) {
                        pStm.BgnTrans( pContext, S813.GetInstance() );
                        ((MainStm)pStm).m_S82S82Stm.Reset(pContext, pStm, S82Stm.S822.GetInstance());
                        pStm.EndTrans( pContext );
                        bResult = true;
                    }
                } break;
                default: break;
                }
                return bResult ? bResult : super.EventProc( pContext, pStm, nEventId, pParams );
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                    super.Exit(pContext, pStm);
                }
            }
        };
        public static class S7 extends MainTop {
            private static TopState singleInstance = new S7();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    System.out.println(GetInstance().getClass() + "entry");
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                switch( _EventId.values()[nEventId] ){
                case E1:{
                    E1Params e = ( E1Params )pParams;
                    pStm.m_bIsExternTrans = true;
                    pStm.BgnTrans( pContext, S71.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                case E2:{
                    pStm.BgnTrans( pContext, S72.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                case E3:{
                    pStm.BgnTrans( pContext, S8.GetInstance(), InitPt4.GetInstance() );
                    ((MainStm)pStm).m_S83S83Stm.Reset(pContext, pStm, S83Stm.S831.GetInstance());
                    ((MainStm)pStm).m_S82S82Stm.Reset(pContext, pStm, S82Stm.S821.GetInstance());
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                default: break;
                }
                return bResult;
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                }
            }
        };
        public static class S71 extends S7 {
            private static TopState singleInstance = new S71();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    super.Entry( pContext, pStm );
                    System.out.println(GetInstance().getClass() + "entry");
                    ((MainStm)pStm).m_pS7History = S71.GetInstance();
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                return bResult ? bResult : super.EventProc( pContext, pStm, nEventId, pParams );
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                    super.Exit(pContext, pStm);
                }
            }
        };
        public static class S72 extends S7 {
            private static TopState singleInstance = new S72();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    super.Entry( pContext, pStm );
                    System.out.println(GetInstance().getClass() + "entry");
                    ((MainStm)pStm).m_pS7History = S72.GetInstance();
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                return bResult ? bResult : super.EventProc( pContext, pStm, nEventId, pParams );
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                    super.Exit(pContext, pStm);
                }
            }
        };
        public static class S10 extends MainTop {
            private static TopState singleInstance = new S10();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    System.out.println(GetInstance().getClass() + "entry");
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                switch( _EventId.values()[nEventId] ){
                case E1:{
                    E1Params e = ( E1Params )pParams;
                    pStm.BgnTrans( pContext, MainTop.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                case E2:{
                    pStm.BgnTrans( pContext, S8.GetInstance(), InitPt4.GetInstance() );
                    ((MainStm)pStm).m_S83S83Stm.Reset(pContext, pStm, S83Stm.S832.GetInstance());
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                default: break;
                }
                return bResult;
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                }
            }
        };
        public static class S5 extends MainTop {
            private static TopState singleInstance = new S5();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    System.out.println(GetInstance().getClass() + "entry");
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                switch( _EventId.values()[nEventId] ){
                case E1:{
                    E1Params e = ( E1Params )pParams;
                    pStm.m_bIsExternTrans = true;
                    pStm.BgnTrans( pContext, S5.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                case E2:{
                    int n = InputValue("Enter condition1: ");
                    if (n == 0) {
                        pStm.BgnTrans( pContext, S41.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } else if (n == 1) {
                        pStm.BgnTrans( pContext, S8.GetInstance(), InitPt4.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } else {
                        pStm.BgnTrans( pContext, S6.GetInstance() );
                        ((MainStm)pStm).m_S6SharedStm.Reset(pContext, pStm, SharedStm.Entry1.GetInstance());
                        pStm.EndTrans( pContext );
                        bResult = true;
                    }
                } break;
                default: break;
                }
                return bResult;
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                }
            }
        };
        public static class S9 extends MainTop {
            private static TopState singleInstance = new S9();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    System.out.println(GetInstance().getClass() + "entry");
                    ((MainStm)pStm).m_S9SharedStm.Reset( pContext, pStm, null );
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                return bResult;
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    ((MainStm)pStm).m_S9SharedStm.Abort( pContext );
                    System.out.println(GetInstance().getClass() + "exit");
                }
            }
        };
        public boolean DefaultTrans( Context pContext ){
            boolean bResult = false;
            Statemachine pStm = this;
            bResult |= m_S6SharedStm.DefaultTrans( pContext );
            bResult |= m_S82S82Stm.DefaultTrans( pContext );
            bResult |= m_S83S83Stm.DefaultTrans( pContext );
            bResult |= m_S9SharedStm.DefaultTrans( pContext );
            do {
                if (m_pCurrentState == MainTop.GetInstance() && m_pPseudostate == MainStm.InitPt0.GetInstance()) {
                    pStm.BgnTrans( pContext, S1.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } else if (m_pCurrentState == S2.GetInstance() && m_pPseudostate == MainStm.InitPt1.GetInstance()) {
                    pStm.BgnTrans( pContext, S21.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } else if (m_pPseudostate == MainStm.S4.GetInstance()) {
                    pStm.BgnTrans( pContext, MainTop.GetInstance() );
                    pStm.m_pPseudostate = MainStm.Junction.GetInstance();
                    pStm.EndTrans( pContext );
                    bResult = true;
                } else if (m_pCurrentState == S4.GetInstance() && m_pPseudostate == MainStm.InitPt2.GetInstance()) {
                    pStm.BgnTrans( pContext, S41.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } else if (m_pPseudostate == MainStm.Junction.GetInstance()) {
                    pStm.BgnTrans( pContext, S6.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } else if (m_pCurrentState == S6.GetInstance() && m_pPseudostate == SharedStm.Exit1.GetInstance()) {
                    pStm.BgnTrans( pContext, S9.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } else if (m_pCurrentState == S8.GetInstance() && m_pPseudostate == MainStm.InitPt4.GetInstance()) {
                    pStm.BgnTrans( pContext, S811.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } else if (m_pCurrentState == S7.GetInstance() && m_pPseudostate == MainStm.InitPt3.GetInstance()) {
                    pStm.BgnTrans( pContext, S71.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } else if (m_pPseudostate == MainStm.S9.GetInstance()) {
                    if( !m_S9SharedStm.IsFinished() ){ break; }
                    pStm.BgnTrans( pContext, S10.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } else if (m_pCurrentState != m_pPseudostate && m_pPseudostate instanceof MainTop) {
                    pStm.BgnTrans( pContext, (TopState)m_pPseudostate );
                    pStm.EndTrans( pContext );
                } else {
                }
            } while (false);
            return bResult;
        }
        public boolean Reset(Context pContext, Statemachine pParentStm, Pseudostate pEntryPoint) {
            m_pParentStm = pParentStm;
            if (pEntryPoint == null) {
                if (IsFinished()) {
                    m_pPseudostate = InitPt0.GetInstance();
                }
            } else {
                if (IsFinished()) {
                    m_pPseudostate = pEntryPoint;
                    return false;
                } else {
                    m_pPseudostate = pEntryPoint;
                }                    
            }
            if (pEntryPoint != null) {
                m_S6SharedStm.Reset( pContext, this, pEntryPoint );
                m_S82S82Stm.Reset( pContext, this, pEntryPoint );
                m_S83S83Stm.Reset( pContext, this, pEntryPoint );
                m_S9SharedStm.Reset( pContext, this, pEntryPoint );
            }
            return RunToCompletion(pContext);
        }
        public boolean EventProc(Context pContext, int nEventId, EventParams pParams){
            boolean bResult = false;
            m_pLCAState = TopState.GetInstance();
            bResult |= m_S6SharedStm.EventProc( pContext, nEventId, pParams );
            bResult |= m_S82S82Stm.EventProc( pContext, nEventId, pParams );
            bResult |= m_S83S83Stm.EventProc( pContext, nEventId, pParams );
            bResult |= m_S9SharedStm.EventProc( pContext, nEventId, pParams );
            bResult = m_pCurrentState.EventProc(pContext, this, nEventId, pParams);
            RunToCompletion(pContext);
            return bResult;
        }
        public boolean IsIn(TopState pCompositeState) {
            if (m_S6SharedStm.IsIn(pCompositeState)) { return true; }
            if (m_S82S82Stm.IsIn(pCompositeState)) { return true; }
            if (m_S83S83Stm.IsIn(pCompositeState)) { return true; }
            if (m_S9SharedStm.IsIn(pCompositeState)) { return true; }
            if (super.IsIn(pCompositeState)) { return true; }
            return false;
        }
        public boolean Abort(Context pContext) {
            m_pSourceState = MainTop.GetInstance();
            BgnTrans(pContext, MainTop.GetInstance());
            EndTrans(pContext);
            return true;
        }
        public boolean IsFinished() {
            return m_pCurrentState == MainTop.GetInstance() && m_pCurrentState == m_pPseudostate;
        }
        public MainStm(){ super(MainTop.GetInstance(), MainTop.GetInstance()); }
    };
    public  ContextImpl(
        int _derivableAttribute,
        String _publicAttribute,
        int _privateAttribute,
        int _internalAttribute,
        int _readOnlyAttribute,
        ArrayList<Aggregration> _anAggregation,
        ArrayList<Composition> _aProtectedComposition
    ) {
        super( _derivableAttribute, _publicAttribute, _privateAttribute, _internalAttribute, _readOnlyAttribute, _anAggregation, _aProtectedComposition );

    }                                                                                           
    MainStm mainStm = new MainStm();                            
}
