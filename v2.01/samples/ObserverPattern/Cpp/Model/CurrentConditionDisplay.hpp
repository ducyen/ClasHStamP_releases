#pragma once
/* File generated by Đức's ClasHStamP */
#include "Generic/CommonInclude.h"
#include "Interfaces/ObserverIfc.hpp"                           
#include "Interfaces/Subject.hpp"                               

class CurrentConditionDisplay: public ObserverIfc{
    public: virtual void update(
        float temperature,
        float humidity,
        float pressure
    ){
    	this->temperature = temperature;
    	this->humidity = humidity;
    	display();
    } /* CurrentConditionDisplay.update */
    public: void display(
    ){
        std::cout << "Current condition: " << temperature << "degrees and " << humidity << "% humidity" << std::endl;
    } /* CurrentConditionDisplay.display */
    friend class Main;
    public:  CurrentConditionDisplay(
        Subject *_weatherData
    ): temperature( 0 ),
        humidity( 0 ),
        weatherData( _weatherData )
    {
        weatherData->registerObserver(this);
    }                                                                                           
    private: float temperature;                                 
    private: float humidity;                                    
    private: Subject* weatherData;                              
};
