/* File generated by Đức's ClasHStamP */
using System;                                                   
using System.Collections.Generic;
using boolean = System.Boolean;
using Abstracts;
using Interfaces;
using Model;
namespace Model {
    public  class Context: BaseClass, Interface2, Interface1
    {
        private static int classOrStaticAttribute;              
        private static int[] initializedStaticArray = { 1, 2, 3 };
        private const int finalConstantAttribute = 5;           
        public  static void classOrStaticMethod(
        ){
            
        } /* Context.classOrStaticMethod */
        public override void publicMethod(
        ){
            
        } /* Context.publicMethod */

        private void privateLeafMethod(
        ){
        } /* Context.privateLeafMethod */
        public  Context(
        ): base(3){
        } /* Context.Context */
        public void methodWithParams(
            String parm1,
            out float parm2
        ){
            parm2 = 3f;
        } /* Context.methodWithParams */
        public UsedDependency methodReturnsSomething(
        ){
            return null;
        } /* Context.methodReturnsSomething */
        public void methodThrowsException(
        ){
        } /* Context.methodThrowsException */
        public void finalMethod(
        ){
        } /* Context.finalMethod */
        public override int derivableAttribute {
            set{ privateAttribute = value; }

        }
        protected override void protectedMethod(
        ){
        } /* Context.protectedMethod */

        protected override void packageVisibleMethod(
        ){
        } /* Context.packageVisibleMethod */

        public  Context(
            int _derivableAttribute,
            String _publicAttribute,
            int _privateAttribute,
            int _internalAttribute,
            int _readOnlyAttribute,
            List<Aggregration> _anAggregation,
            List<Composition> _aProtectedComposition
        ):  base( _derivableAttribute )
        {
            publicAttribute = _publicAttribute;
            privateAttribute = _privateAttribute;
            internalAttribute = _internalAttribute;
            isInitializedAttribute = true;
            readOnlyAttribute = _readOnlyAttribute;
            anAggregation = _anAggregation;
            aProtectedComposition = _aProtectedComposition;
        }                                                                                       
        public String publicAttribute;                          
        private int privateAttribute;                           
        internal int internalAttribute;                         
        private boolean isInitializedAttribute;                 
        private readonly int readOnlyAttribute;                 
        private   List<Aggregration> anAggregation;             
        protected   List<Composition> aProtectedComposition;    
    }
}
