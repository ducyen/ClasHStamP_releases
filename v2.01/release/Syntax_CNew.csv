item,name,ext1st,extnxt,begin,end
file,[cONTAINER]/[nAME].c,,"#include ""[nAME].h""[->64][dESC]
","/* File generated by Đức's ClasHStamP */
#define __[nAME]_INTERNAL__
#include ""CommonInclude.h""
#include ""[nAME].h""
",
class,,,,,
b_enum,"/* [nAME]列挙型の値から文字列に変換する関数（デバッグ用） */
const TCHAR* [nAME]_toString( [nAME] value ){
","    switch( value ){
    case [nAME]: return _T( ""[nAME]"" );
","    case [nAME]: return _T( ""[nAME]"" );
",,"    default: return _T( ""[nAME]_UNKNOWN"" );
    }
}
"
c_enum,"/* [nAME]列挙型の値から文字列に変換する関数（デバッグ用） */
const TCHAR* [nAME]_toString( [nAME] value ){
","    switch( value ){
    case [nAME]: return _T( ""[nAME]"" );
","    case [nAME]: return _T( ""[nAME]"" );
",,"    default: return _T( ""[nAME]_UNKNOWN"" );
    }
}
"
i_enum,"typedef enum tag[nAME] {
","    [nAME],[->64][dESC]
","    [nAME],[->64][dESC]
",,"    [nAME]_NUM
}[nAME];
"
b_struct,,,,,
c_struct,,,,,
i_struct,"typedef struct tag[nAME] {
","    [tYPE] [nAME][mODIFIER];[->64][dESC]
","    [tYPE] [nAME][mODIFIER];[->64][dESC]
","typedef struct tag[nAME] {
    [tYPE] base;
","}[nAME];
"
constructor,"[cONTAINER]* [nAME]_Copy( [nAME]* p[nAME], const [nAME]* pSource ){
",,,,"    return ( [cONTAINER]* )p[nAME];
}
"
attr_group,,,,,
ctor_call,"    [cONTAINER]_Copy( ( [cONTAINER]* )p[nAME], ( [cONTAINER]* )pSource );
",,,,
__s_attr,,,,"    p[cONTAINER]->[nAME] = pSource->[nAME];
","    p[cONTAINER]->[nAME] = pSource->[nAME];
"
__o_attr,,,,"    memcpy( &p[cONTAINER]->[nAME], &pSource->[nAME], sizeof( p[cONTAINER]->[nAME] ) );
","    memcpy( &p[cONTAINER]->[nAME], &pSource->[nAME], sizeof( p[cONTAINER]->[nAME] ) );
"
__r_attr,,,,"    p[cONTAINER]->[nAME] = pSource->[nAME];
","    p[cONTAINER]->[nAME] = pSource->[nAME];
"
_ms_attr,,,,"    memcpy( p[cONTAINER]->[nAME], pSource->[nAME], sizeof( p[cONTAINER]->[nAME] ) );
","    memcpy( p[cONTAINER]->[nAME], pSource->[nAME], sizeof( p[cONTAINER]->[nAME] ) );
"
_mo_attr,,,,"    memcpy( p[cONTAINER]->[nAME], pSource->[nAME], sizeof( p[cONTAINER]->[nAME] ) );
","    memcpy( p[cONTAINER]->[nAME], pSource->[nAME], sizeof( p[cONTAINER]->[nAME] ) );
"
_mr_attr,,,,"    memcpy( p[cONTAINER]->[nAME], pSource->[nAME], sizeof( p[cONTAINER]->[nAME] ) );
","    memcpy( p[cONTAINER]->[nAME], pSource->[nAME], sizeof( p[cONTAINER]->[nAME] ) );
"
c_s_attr,,,,,
c_o_attr,,,,,
c_r_attr,,,,,
cms_attr,,,,,
cmo_attr,,,,,
cmr_attr,,,,,
s_s_attr,"/** @private @static @memberof [cONTAINER] */
static [tYPE][mODIFIER] [nAME] = [vALUE];[->64][dESC]
","/** @private @static @memberof [cONTAINER] */
static const [tYPE][mODIFIER] [nAME] = [vALUE];[->64][dESC]
",,,"/** @private @static @memberof [cONTAINER] */
static [tYPE][mODIFIER] [nAME];[->64][dESC]
"
s_o_attr,"/** @private @static @memberof [cONTAINER] */
static [tYPE][mODIFIER] [nAME] = [vALUE];[->64][dESC]
","/** @private @static @memberof [cONTAINER] */
static const [tYPE][mODIFIER] [nAME] = [vALUE];[->64][dESC]
",,,"/** @private @static @memberof [cONTAINER] */
static [tYPE][mODIFIER] [nAME];[->64][dESC]
"
s_r_attr,"/** @private @static @memberof [cONTAINER] */
static [tYPE][mODIFIER]* [nAME] = [vALUE];[->64][dESC]
","/** @private @static @memberof [cONTAINER] */
static const [tYPE][mODIFIER]* [nAME] = [vALUE];[->64][dESC]
",,,"/** @private @static @memberof [cONTAINER] */
static [tYPE][mODIFIER]* [nAME];[->64][dESC]
"
sms_attr,"/** @private @static @memberof [cONTAINER] */
static [tYPE] [nAME][ [mODIFIER] ] = [vALUE];[->64][dESC]
","/** @private @static @memberof [cONTAINER] */
static const [tYPE] [nAME][ [mODIFIER] ] = [vALUE];[->64][dESC]
",,,"/** @private @static @memberof [cONTAINER] */
static [tYPE] [nAME][ [mODIFIER] ];[->64][dESC]
"
smo_attr,"/** @private @static @memberof [cONTAINER] */
static [tYPE] [nAME][ [mODIFIER] ] = [vALUE];[->64][dESC]
","/** @private @static @memberof [cONTAINER] */
static const [tYPE] [nAME][ [mODIFIER] ] = [vALUE];[->64][dESC]
",,,"/** @private @static @memberof [cONTAINER] */
static [tYPE] [nAME][ [mODIFIER] ];[->64][dESC]
"
smr_attr,"/** @private @static @memberof [cONTAINER] */
static [tYPE]* [nAME][ [mODIFIER] ] = [vALUE];[->64][dESC]
","/** @private @static @memberof [cONTAINER] */
static const [tYPE]* [nAME][ [mODIFIER] ] = [vALUE];[->64][dESC]
",,,"/** @private @static @memberof [cONTAINER] */
static [tYPE]* [nAME][ [mODIFIER] ];[->64][dESC]
"
p_s_attr,,"[tYPE][mODIFIER] [cONTAINER]_Get[Name]( const [cONTAINER]* p[cONTAINER] ){
[vALUE]}
","void [cONTAINER]_Set[Name]( [cONTAINER]* p[cONTAINER], [tYPE][mODIFIER] value ){
[vALUE]}
","[->]return p[cONTAINER]->[nAME];
","[->]p[cONTAINER]->[nAME] = value;
"
p_o_attr,,"[tYPE]* [cONTAINER]_Get[Name]( const [cONTAINER]* p[cONTAINER] ){
[vALUE]}
","void [cONTAINER]_Set[Name]( [cONTAINER]* p[cONTAINER], const [tYPE]* value ){
[vALUE]}
","[->]return &p[cONTAINER]->[nAME];
","[->]p[cONTAINER]->[nAME] = *value;
"
p_r_attr,,"[tYPE]* [cONTAINER]_Get[Name]( const [cONTAINER]* p[cONTAINER] ){
    return p[cONTAINER]->p[Name];
}
","void [cONTAINER]_Set[Name]( [cONTAINER]* p[cONTAINER], [tYPE]* value ){
    p[cONTAINER]->p[Name] = value;
}
","[->]return p[cONTAINER]->[nAME];
","[->]p[cONTAINER]->[nAME] = value;
"
pms_attr,,"const [tYPE][mODIFIER]* [cONTAINER]_Get[Name]( const [cONTAINER]* p[cONTAINER] ){
    return p[cONTAINER]->[Name];
}
","void [cONTAINER]_Set[Name]( [cONTAINER]* p[cONTAINER], const [tYPE][mODIFIER]* value ){
    memcpy( p[cONTAINER]->[Name], value, sizeof( p[cONTAINER]->[Name] ) );
}
","[->]return p[cONTAINER]->[nAME];
","[->]p[cONTAINER]->[nAME] = value;
"
pmo_attr,,"[tYPE]* [cONTAINER]_Get[Name]( [cONTAINER]* p[cONTAINER], UINT32 index ){
    return &p[cONTAINER]->[Name][ index ];
}
","void [cONTAINER]_Set[Name]( [cONTAINER]* p[cONTAINER], const [tYPE]* value, UINT32 index ){
    memcpy( p[cONTAINER]->[Name][ index ], value, sizeof( [tYPE] ) );
}
","[->]return p[cONTAINER]->[nAME];
","[->]p[cONTAINER]->[nAME] = value;
"
pmr_attr,,"[tYPE]* [cONTAINER]_Get[Name]( const [cONTAINER]* p[cONTAINER], UINT32 index ){
    return p[cONTAINER]->[Name][ index ];
}
","void [cONTAINER]_Set[Name]( [cONTAINER]* p[cONTAINER], [tYPE]* value, UINT32 index  ){
    p[cONTAINER]->[Name][ index ] = value;
}
","[->]return p[cONTAINER]->[nAME];
","[->]p[cONTAINER]->[nAME] = value;
"
vptr_impl,"const [cONTAINER]Vtbl g[tYPE]Vtbl = {
[nAME]};
",,,"    .p[nAME][->32] = [cONTAINER]_[nAME],","
"
__c_oper,"/** @protected @memberof [cONTAINER] */
static [tYPE][mODIFIER] [cONTAINER]_[nAME](
    [cONTAINER]* p[cONTAINER]",",
    [tYPE][mODIFIER] [nAME]",",
    [tYPE][mODIFIER] [nAME]","
){
","} /* [cONTAINER]_[nAME] */

"
__b_oper,"/** @public @memberof [cONTAINER] */
static [tYPE][mODIFIER] [cONTAINER]_[nAME](
    [cONTAINER]* p[cONTAINER]",",
    [tYPE][mODIFIER] [nAME]",",
    [tYPE][mODIFIER] [nAME]","
){
","} /* [cONTAINER]_[nAME] */

"
vptr_decl,,,,,
_ac_oper,"/** @protected @pure @memberof [cONTAINER] */
[tYPE][mODIFIER] [cONTAINER]_[nAME](
    [cONTAINER]* p[cONTAINER]",",
    [tYPE][mODIFIER] [nAME]",",
    [tYPE][mODIFIER] [nAME]","
){
","} /* [cONTAINER]_[nAME] */

"
_ab_oper,"/** @public @pure @memberof [cONTAINER] */
[tYPE][mODIFIER] [cONTAINER]_[nAME](
    [cONTAINER]* p[cONTAINER]",",
    [tYPE][mODIFIER] [nAME]",",
    [tYPE][mODIFIER] [nAME]","
){
","} /* [cONTAINER]_[nAME] */

"
l_i_oper,"/** @private @memberof [cONTAINER] */
static [tYPE][mODIFIER] [cONTAINER]_[nAME](
    [cONTAINER]* p[cONTAINER]",",
    [tYPE][mODIFIER] [nAME]",",
    [tYPE][mODIFIER] [nAME]","
){
","} /* [cONTAINER]_[nAME] */

"
l_c_oper,"/** @protected @memberof [cONTAINER] */
[tYPE][mODIFIER] [cONTAINER]_[nAME](
    [cONTAINER]* p[cONTAINER]",",
    [tYPE][mODIFIER] [nAME]",",
    [tYPE][mODIFIER] [nAME]","
){
","} /* [cONTAINER]_[nAME] */

"
l_b_oper,"/** @public @memberof [cONTAINER] */
[tYPE][mODIFIER] [cONTAINER]_[nAME](
    [cONTAINER]* p[cONTAINER]",",
    [tYPE][mODIFIER] [nAME]",",
    [tYPE][mODIFIER] [nAME]","
){
","} /* [cONTAINER]_[nAME] */

"
lai_oper,[tYPE][mODIFIER] [cONTAINER]_[nAME]( [cONTAINER]* p[cONTAINER],", [tYPE][mODIFIER] [nAME]",", [tYPE][mODIFIER] [nAME]"," );
",
vptr_call,"    if( p[cONTAINER]->vTbl == NULL || p[cONTAINER]->vTbl->p[nAME] == NULL ){ return ( [tYPE] )0; }
    return p[cONTAINER]->vTbl->p[nAME]( p[cONTAINER]",", [nAME]",", [nAME]","    if( p[cONTAINER]->vTbl == NULL || p[cONTAINER]->vTbl->p[nAME] == NULL ){ return; }
    p[cONTAINER]->vTbl->p[nAME]( p[cONTAINER]"," );
"
s_i_oper,"/** @private @static @memberof [cONTAINER] */
STATIC [tYPE][mODIFIER] [cONTAINER]_[nAME](
",    [tYPE][mODIFIER] [nAME],",
    [tYPE][mODIFIER] [nAME]","
){
","} /* [cONTAINER]_[nAME] */

"
s_c_oper,"[tYPE][mODIFIER] [cONTAINER]_[nAME](
",    [tYPE][mODIFIER] [nAME],",
    [tYPE][mODIFIER] [nAME]","
){
","} /* [cONTAINER]_[nAME] */

"
s_b_oper,"[tYPE][mODIFIER] [cONTAINER]_[nAME](
",    [tYPE][mODIFIER] [nAME],",
    [tYPE][mODIFIER] [nAME]","
){
","} /* [cONTAINER]_[nAME] */

"
sai_oper,STATIC [tYPE][mODIFIER] [cONTAINER]_[nAME]( ,[tYPE][mODIFIER] [nAME],", [tYPE][mODIFIER] [nAME]"," );
",
sab_oper,,,,,
event_decl,"const TCHAR* [nAME]Event_toString( [nAME]_EVENT value ){
","    switch( value ){
    case [tYPE]_[nAME]: return _T( ""[nAME]"" );
","    case [tYPE]_[nAME]: return _T( ""[nAME]"" );
",,"    default: return _T( ""[nAME]_UNKNOWN"" );
    }
}
"
state_decl,,,,,
state_entry,"static void [Scope]_EndTrans( [tYPE] *p[tYPE], [sCOPE]* pStm ){
    pStm->base.nCurrentState = pStm->base.nTargetState;
    pStm->base.bIsExternTrans = FALSE;
","    switch( pStm->base.nCurrentState ){
    case [sCOPE]_[nAME]:[->32][Scope]_[cONTAINER]_Entry( p[tYPE], pStm ); break;
","    case [sCOPE]_[nAME]:[->32][Scope]_[cONTAINER]_Entry( p[tYPE], pStm ); break;
","    default: break;
    }
","}
"
state_exit,"static void [Scope]_BgnTrans( [tYPE] *p[tYPE], [sCOPE]* pStm, UINT32 targetState, UINT32 initState ){
    pStm->base.nTargetState = targetState;
    pStm->base.nPseudostate = targetState;
    if( initState ){
        pStm->base.nPseudostate = initState;
    }
","    switch( pStm->base.nCurrentState ){
    case [sCOPE]_[nAME]:[->32][Scope]_[cONTAINER]_Exit( p[tYPE], pStm ); break;
","    case [sCOPE]_[nAME]:[->32][Scope]_[cONTAINER]_Exit( p[tYPE], pStm ); break;
","    default: break;
    }
","}
"
state_impl,"static BOOL [Scope]_Reset( [tYPE]* p[tYPE], [sCOPE]* pStm, HdStateMachine* pParentStm, UINT32 nEntryPoint ) {
    pStm->base.pParentStm = pParentStm;
    if( nEntryPoint == NULL ){
        if( [Scope]_IsFinished( &pStm->base ) ){
            pStm->base.nPseudostate = [sCOPE]_[mODIFIER];
        }
    }else{
        if( [Scope]_IsFinished( &pStm->base ) ){
            pStm->base.nPseudostate = nEntryPoint;
            return FALSE;
        }else{
            pStm->base.nPseudostate = nEntryPoint;
        }
    }
    if( nEntryPoint != STATE_UNDEF && nEntryPoint <= STATE_TOP ){
[vALUE]    }
    return [Scope]_RunToCompletion( p[tYPE], pStm );
}
static BOOL [Scope]_EventProc( [tYPE]* p[tYPE], [sCOPE]* pStm, [tYPE]_EVENT nEventId, void* pEventParams ){
    BOOL bResult = FALSE;
    pStm->base.nLCAState = STATE_UNDEF;
","    switch( pStm->base.nCurrentState ){
    case [sCOPE]_[nAME]:[->48]bResult |= [Scope]_[nAME]_EventProc( p[tYPE], pStm, nEventId, pEventParams ); break;
","    case [sCOPE]_[nAME]:[->48]bResult |= [Scope]_[nAME]_EventProc( p[tYPE], pStm, nEventId, pEventParams ); break;
","    default: break;
    }
","    [Scope]_RunToCompletion( p[tYPE], pStm );
    return bResult;
}
static BOOL [Scope]_IsIn( [sCOPE]* pStm, UINT32 nCompositeState ) {
[vALUE]    if( IS_IN( pStm->base.nCurrentState, nCompositeState ) ){ return TRUE; }
    return FALSE;
}
static BOOL [Scope]_Abort( [tYPE]* p[tYPE], [sCOPE]* pStm ) {
    pStm->base.nSourceState = [sCOPE]_[nAME];
    [Scope]_BgnTrans( p[tYPE], pStm, [sCOPE]_[nAME], STATE_UNDEF );
    [Scope]_EndTrans( p[tYPE], pStm );
    return TRUE;
}
int [sCOPE]_IsFinished([sCOPE]* p[sCOPE]){
    return p[sCOPE]->base.nCurrentState == [sCOPE]_[nAME] && p[sCOPE]->base.nCurrentState == p[sCOPE]->base.nPseudostate;
}
"
transition,"static void [Scope]_[nAME]_Entry( [tYPE]* p[tYPE], [sCOPE]* pStm ){
    if( HdStateMachine_Enterable( &pStm->base, [sCOPE]_[nAME] ) ){
        [Scope]_[cONTAINER]_Entry( p[tYPE], pStm );
        printf( ""%s\n"", __FUNCTION__ );
[vALUE]    }
[mODIFIER]}
static BOOL [Scope]_[nAME]_EventProc( [tYPE]* p[tYPE], [sCOPE]* pStm, [tYPE]_EVENT nEventId, void* pEventParams ){
    BOOL bResult = FALSE;
    pStm->base.nSourceState = [sCOPE]_[nAME];
","    switch( nEventId ){
    case [tYPE]_[nAME]:{
","    } break;
    case [tYPE]_[nAME]:{
","    } break;
    default: break;
    }
","    return bResult ? bResult : [Scope]_[cONTAINER]_EventProc( p[tYPE], pStm, nEventId, pEventParams );
}
static void [Scope]_[nAME]_Exit( [tYPE]* p[tYPE], [sCOPE]* pStm ){
    if( HdStateMachine_Exitable( &pStm->base, [sCOPE]_[nAME] ) ){ 
[vALUE]        printf( ""%s\n"", __FUNCTION__ );
        [Scope]_[cONTAINER]_Exit( p[tYPE], pStm );
    }
}
"
trans_top,"static void [Scope]_[nAME]_Entry( [tYPE]* p[tYPE], [sCOPE]* pStm ){
    if( HdStateMachine_Enterable( &pStm->base, [sCOPE]_[nAME] ) ){
        printf( ""%s\n"", __FUNCTION__ );
[vALUE]    }
[mODIFIER]}
static BOOL [Scope]_[nAME]_EventProc( [tYPE]* p[tYPE], [sCOPE]* pStm, [tYPE]_EVENT nEventId, void* pEventParams ){
    BOOL bResult = FALSE;
    pStm->base.nSourceState = [sCOPE]_[nAME];
","    switch( nEventId ){
    case [tYPE]_[nAME]:{
","    } break;
    case [tYPE]_[nAME]:{
","    } break;
    default: break;
    }
","    return bResult;
}
static void [Scope]_[nAME]_Exit( [tYPE]* p[tYPE], [sCOPE]* pStm ){
    if( HdStateMachine_Exitable( &pStm->base, [sCOPE]_[nAME] ) ){ 
[vALUE]        printf( ""%s\n"", __FUNCTION__ );
    }
}
"
branch,"[->]else {
","[->]if ([nAME]) {
","[->]} else if ([nAME]) {
","[->]} else {
","[->]}
"
comment,/**< [nAME] [->32]*/," * [nAME]
"," * [nAME]
","/**
"," */
"
action,"[->][nAME]_PARAMS* pParams = ( [nAME]_PARAMS* )pEventParams;
","[->][nAME]
","[->][nAME]
","[->][Scope]_BgnTrans( p[tYPE], pStm, [sCOPE]_[nAME], STATE_UNDEF );
[mODIFIER][->][Scope]_EndTrans( p[tYPE], pStm );
[->]bResult = TRUE;
","[mODIFIER][->]bResult = TRUE;
"
param_dir,,,,-2,
inheritance,,,,,
template,,,,,
statemachine,,,,"static void [nAME]_BgnTrans( [cONTAINER] *p[tYPE], [nAME]* pStm, UINT32 targetState, UINT32 initState );
static void [nAME]_EndTrans( [cONTAINER] *p[tYPE], [nAME]* pStm );
static BOOL [nAME]_Reset( [cONTAINER]* p[tYPE], [nAME]* pStm, HdStateMachine* pParentStm, UINT32 nEntryPoint );
static BOOL [nAME]_Abort( [cONTAINER]* p[tYPE], [nAME]* pStm );
static BOOL [nAME]_EventProc( [cONTAINER]* p[tYPE], [nAME]* pStm, [cONTAINER]_EVENT nEventId, void* pEventParams );
static BOOL [nAME]_RunToCompletion( [cONTAINER]* p[tYPE], [nAME]* pStm );
",
default_trans,"static BOOL [Scope]_StateDefaultTrans( [tYPE]* p[tYPE], [sCOPE]* pStm ){
    BOOL bResult = FALSE;
    pStm->base.nSourceState = pStm->base.nCurrentState;
    pStm->base.nLCAState = STATE_UNDEF;
","[->]do{   if( pStm->base.nCurrentState == [sCOPE]_[mODIFIER] && pStm->base.nPseudostate == [cONTAINER]_[nAME] ){
","[->]}else if( pStm->base.nCurrentState == [sCOPE]_[mODIFIER] && pStm->base.nPseudostate == [cONTAINER]_[nAME] ){
","[->]}else if( pStm->base.nCurrentState != pStm->base.nPseudostate && IS_IN(pStm->base.nPseudostate, [sCOPE]_[nAME]) ){
[->]    [Scope]_BgnTrans( p[tYPE], pStm, pStm->base.nPseudostate, STATE_UNDEF );
[->]    [Scope]_EndTrans( p[tYPE], pStm );
[->]    bResult = TRUE;
[->]}else{
[->]}   }while( FALSE );
","    return bResult;
}
static BOOL [Scope]_RunToCompletion( [tYPE]* p[tYPE], [sCOPE]* pStm ){
    BOOL bResult;
    do{
        bResult = [Scope]_StateDefaultTrans( p[tYPE], pStm );
    } while ( bResult );
    return bResult;
}
"
substm_impl,"[->]if( ![sCOPE]_IsIn( &pStm->[nAME][sCOPE], [mODIFIER]_[vALUE] ) ){ break; }
","[->]if( ![Type]_IsFinished( &pStm->[nAME][tYPE].base ) ){ break; }
","[->]bResult |= [tYPE]_EventProc( p[cONTAINER], &pStm->[nAME][tYPE], nEventId, pEventParams );
","[->][tYPE]_Reset( p[cONTAINER], &pStm->[nAME][tYPE], &pStm->base, STATE_UNDEF );
","[->][tYPE]_Abort( p[cONTAINER], &pStm->[nAME][tYPE] );
"
substm_decl,,,"[->]bResult |= [tYPE]_StateDefaultTrans( p[cONTAINER], &pStm->[nAME][tYPE] );
","[->]pStm->base.pParentStm->nPseudostate = [sCOPE]_[vALUE];
","[->][Scope]_Reset( p[tYPE], &pStm->[nAME][sCOPE], &pStm->base, [mODIFIER]_[vALUE] );
"
history,,,"[->]pStm->n[nAME]History = [sCOPE]_[VALUE];
","[->]if( pStm->n[nAME]History ){
[->]    [Scope]_BgnTrans( p[tYPE], pStm, pStm->n[nAME]History, STATE_UNDEF );
[mODIFIER][->]    [Scope]_EndTrans( p[tYPE], pStm );
[->]    bResult = TRUE;
[->]    break;
[->]}
","[->][Scope]_BgnTrans( p[tYPE], pStm, [sCOPE]_[cONTAINER], [sCOPE]_[nAME] );
[mODIFIER][->][Scope]_EndTrans( p[tYPE], pStm );
[->]bResult = TRUE;
"
junction,"[->]pStm->base.nPseudostate = [sCOPE]_[vALUE];
","[->]do{   if( pStm->base.nPseudostate == [cONTAINER]_[nAME] ){
","[->]}else if( pStm->base.nPseudostate == [cONTAINER]_[nAME] ){
","[tYPE]_IsIn( p[tYPE], [mODIFIER]_[vALUE] )","
[->] || [tYPE]_IsIn( p[tYPE], [mODIFIER]_[vALUE] )"
api_call,"BOOL [tYPE]_EventProc( [tYPE]* p[tYPE], [tYPE]_EVENT nEventId, void* pEventParams ){
    return [Scope]_EventProc( p[tYPE], &p[tYPE]->mainStm, nEventId, pEventParams );
}
BOOL [tYPE]_Start( [tYPE]* p[tYPE] ){
    [Scope]_Abort( p[tYPE], &p[tYPE]->mainStm );
    return [Scope]_Reset( p[tYPE], &p[tYPE]->mainStm, NULL, STATE_UNDEF );
}
BOOL [tYPE]_IsIn( [tYPE]* p[tYPE], UINT32 nState ){
    return [Scope]_IsIn( &p[tYPE]->mainStm, nState );
}
","[->]pStm->base.bIsExternTrans = TRUE;
","[->]    if( [tYPE]_IsIn( &pStm->[nAME][tYPE], nCompositeState ) ){ return TRUE; }
","[->]        [sCOPE]_Reset( p[cONTAINER], &pStm->[nAME][sCOPE], &pStm->base, nEntryPoint );
",_
friend,,,,,
visibility,,,,,
