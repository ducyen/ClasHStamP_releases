/* File generated by Đức's ClasHStamP */
using System;                                                   
using System.Collections.Generic;
using boolean = System.Boolean;
using Model;
using Base;
namespace Model {
    public  class ContextImpl: Context
    {
        public enum _EventId {
            E0,
            E1,
            E2,
            E3,
            E4,
            E5,
            ContextImplEventNum
        };
        class S111Stm: Statemachine {
            public class S111Top: TopState {
                private static TopState singleInstance = new S111Top();
                public static new TopState GetInstance() { return singleInstance; }
            }
            public class Entry1: Pseudostate<Entry1>{};
            public class InitPt: Pseudostate<InitPt>{};
            public class S14: S111Top {
                private static TopState singleInstance = new S14();
                public static new TopState GetInstance() { return singleInstance; }
                public override void Entry(Context pContext, Statemachine pStm){
                    if( pStm.IsEnterable(GetInstance()) ){
                        Console.WriteLine(GetInstance().GetType() + "entry");
                    }
                }
                public override bool EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                    bool bResult = false;
                    pStm.m_pSourceState = GetInstance();
                    switch( (_EventId)nEventId ){
                    case _EventId.E2:{
                        pStm.BgnTrans( pContext, S15.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } break;
                    default: break;
                    }
                    return bResult;
                }
                public override void Exit(Context pContext, Statemachine pStm) {
                    if (pStm.IsExitable(GetInstance())) {
                        Console.WriteLine(GetInstance().GetType() + "exit");
                    }
                }
            };
            public class S15: S111Top {
                private static TopState singleInstance = new S15();
                public static new TopState GetInstance() { return singleInstance; }
                public override void Entry(Context pContext, Statemachine pStm){
                    if( pStm.IsEnterable(GetInstance()) ){
                        Console.WriteLine(GetInstance().GetType() + "entry");
                    }
                }
                public override bool EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                    bool bResult = false;
                    pStm.m_pSourceState = GetInstance();
                    return bResult;
                }
                public override void Exit(Context pContext, Statemachine pStm) {
                    if (pStm.IsExitable(GetInstance())) {
                        Console.WriteLine(GetInstance().GetType() + "exit");
                    }
                }
            };
            public override bool DefaultTrans( Context pContext ){
                bool bResult = false;
                Statemachine pStm = this;
                do {
                    if (m_pPseudostate == S111Stm.Entry1.GetInstance()) {
                        pStm.BgnTrans( pContext, S14.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } else if (m_pCurrentState == S111Top.GetInstance() && m_pPseudostate == S111Stm.InitPt.GetInstance()) {
                        pStm.BgnTrans( pContext, S15.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } else if (m_pCurrentState != m_pPseudostate && m_pPseudostate is S111Top) {
                        pStm.BgnTrans( pContext, m_pPseudostate as TopState );
                        pStm.EndTrans( pContext );
                    } else {
                    }
                } while (false);
                return bResult;
            }
            public override bool Reset(Context pContext, Statemachine pParentStm, Pseudostate pEntryPoint) {
                m_pParentStm = pParentStm;
                if (pEntryPoint == null) {
                    if (IsFinished()) {
                        m_pPseudostate = InitPt.GetInstance();
                    }
                } else {
                    if (IsFinished()) {
                        m_pPseudostate = pEntryPoint;
                        return false;
                    } else {
                        m_pPseudostate = pEntryPoint;
                    }                    
                }
                if (pEntryPoint != null) {
                }
                return RunToCompletion(pContext);
            }
            public override bool EventProc(Context pContext, int nEventId, EventParams pParams){
                bool bResult = false;
                m_pLCAState = TopState.GetInstance();
                bResult |= m_pCurrentState.EventProc(pContext, this, nEventId, pParams);
                RunToCompletion(pContext);
                return bResult;
            }
            public override bool IsIn(TopState pCompositeState) {
                if (base.IsIn(pCompositeState)) { return true; }
                return false;
            }
            public override bool Abort(Context pContext) {
                m_pSourceState = S111Top.GetInstance();
                BgnTrans(pContext, S111Top.GetInstance());
                EndTrans(pContext);
                return true;
            }
            public override bool IsFinished() {
                return m_pCurrentState == S111Top.GetInstance() && m_pCurrentState == m_pPseudostate;
            }
            public S111Stm(): base(S111Top.GetInstance(), S111Top.GetInstance()) {}
        };
        class S112Stm: Statemachine {
            public class S112Top: TopState {
                private static TopState singleInstance = new S112Top();
                public static new TopState GetInstance() { return singleInstance; }
            }
            public class Entry1: Pseudostate<Entry1>{};
            public class InitPt: Pseudostate<InitPt>{};
            public class Entry2: Pseudostate<Entry2>{};
            public class S16: S112Top {
                private static TopState singleInstance = new S16();
                public static new TopState GetInstance() { return singleInstance; }
                public override void Entry(Context pContext, Statemachine pStm){
                    if( pStm.IsEnterable(GetInstance()) ){
                        Console.WriteLine(GetInstance().GetType() + "entry");
                    }
                }
                public override bool EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                    bool bResult = false;
                    pStm.m_pSourceState = GetInstance();
                    switch( (_EventId)nEventId ){
                    case _EventId.E3:{
                        pStm.BgnTrans( pContext, S17.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } break;
                    default: break;
                    }
                    return bResult;
                }
                public override void Exit(Context pContext, Statemachine pStm) {
                    if (pStm.IsExitable(GetInstance())) {
                        Console.WriteLine(GetInstance().GetType() + "exit");
                    }
                }
            };
            public class S17: S112Top {
                private static TopState singleInstance = new S17();
                public static new TopState GetInstance() { return singleInstance; }
                public override void Entry(Context pContext, Statemachine pStm){
                    if( pStm.IsEnterable(GetInstance()) ){
                        Console.WriteLine(GetInstance().GetType() + "entry");
                    }
                }
                public override bool EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                    bool bResult = false;
                    pStm.m_pSourceState = GetInstance();
                    return bResult;
                }
                public override void Exit(Context pContext, Statemachine pStm) {
                    if (pStm.IsExitable(GetInstance())) {
                        Console.WriteLine(GetInstance().GetType() + "exit");
                    }
                }
            };
            public override bool DefaultTrans( Context pContext ){
                bool bResult = false;
                Statemachine pStm = this;
                do {
                    if (m_pPseudostate == S112Stm.Entry1.GetInstance()) {
                        pStm.BgnTrans( pContext, S16.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } else if (m_pCurrentState == S112Top.GetInstance() && m_pPseudostate == S112Stm.InitPt.GetInstance()) {
                        pStm.BgnTrans( pContext, S16.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } else if (m_pPseudostate == S112Stm.Entry2.GetInstance()) {
                        pStm.BgnTrans( pContext, S17.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } else if (m_pCurrentState != m_pPseudostate && m_pPseudostate is S112Top) {
                        pStm.BgnTrans( pContext, m_pPseudostate as TopState );
                        pStm.EndTrans( pContext );
                    } else {
                    }
                } while (false);
                return bResult;
            }
            public override bool Reset(Context pContext, Statemachine pParentStm, Pseudostate pEntryPoint) {
                m_pParentStm = pParentStm;
                if (pEntryPoint == null) {
                    if (IsFinished()) {
                        m_pPseudostate = InitPt.GetInstance();
                    }
                } else {
                    if (IsFinished()) {
                        m_pPseudostate = pEntryPoint;
                        return false;
                    } else {
                        m_pPseudostate = pEntryPoint;
                    }                    
                }
                if (pEntryPoint != null) {
                }
                return RunToCompletion(pContext);
            }
            public override bool EventProc(Context pContext, int nEventId, EventParams pParams){
                bool bResult = false;
                m_pLCAState = TopState.GetInstance();
                bResult |= m_pCurrentState.EventProc(pContext, this, nEventId, pParams);
                RunToCompletion(pContext);
                return bResult;
            }
            public override bool IsIn(TopState pCompositeState) {
                if (base.IsIn(pCompositeState)) { return true; }
                return false;
            }
            public override bool Abort(Context pContext) {
                m_pSourceState = S112Top.GetInstance();
                BgnTrans(pContext, S112Top.GetInstance());
                EndTrans(pContext);
                return true;
            }
            public override bool IsFinished() {
                return m_pCurrentState == S112Top.GetInstance() && m_pCurrentState == m_pPseudostate;
            }
            public S112Stm(): base(S112Top.GetInstance(), S112Top.GetInstance()) {}
        };
        class S18Stm: Statemachine {
            public class S18Top: TopState {
                private static TopState singleInstance = new S18Top();
                public static new TopState GetInstance() { return singleInstance; }
            }
            public class Entry1: Pseudostate<Entry1>{};
            public class Exit1: Pseudostate<Exit1>{};
            public class InitPt: Pseudostate<InitPt>{};
            public class S181: S18Top {
                private static TopState singleInstance = new S181();
                public static new TopState GetInstance() { return singleInstance; }
                public override void Entry(Context pContext, Statemachine pStm){
                    if( pStm.IsEnterable(GetInstance()) ){
                        Console.WriteLine(GetInstance().GetType() + "entry");
                    }
                }
                public override bool EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                    bool bResult = false;
                    pStm.m_pSourceState = GetInstance();
                    switch( (_EventId)nEventId ){
                    case _EventId.E0:{
                        pStm.BgnTrans( pContext, S182.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } break;
                    default: break;
                    }
                    return bResult;
                }
                public override void Exit(Context pContext, Statemachine pStm) {
                    if (pStm.IsExitable(GetInstance())) {
                        Console.WriteLine(GetInstance().GetType() + "exit");
                    }
                }
            };
            public class S182: S18Top {
                private static TopState singleInstance = new S182();
                public static new TopState GetInstance() { return singleInstance; }
                public override void Entry(Context pContext, Statemachine pStm){
                    if( pStm.IsEnterable(GetInstance()) ){
                        Console.WriteLine(GetInstance().GetType() + "entry");
                    }
                }
                public override bool EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                    bool bResult = false;
                    pStm.m_pSourceState = GetInstance();
                    switch( (_EventId)nEventId ){
                    case _EventId.E2:{
                        pStm.BgnTrans( pContext, S18Top.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } break;
                    case _EventId.E3:{
                        pStm.BgnTrans( pContext, S18Top.GetInstance() );
                        pStm.m_pParentStm.m_pPseudostate = S18Stm.Exit1.GetInstance();
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } break;
                    default: break;
                    }
                    return bResult;
                }
                public override void Exit(Context pContext, Statemachine pStm) {
                    if (pStm.IsExitable(GetInstance())) {
                        Console.WriteLine(GetInstance().GetType() + "exit");
                    }
                }
            };
            public override bool DefaultTrans( Context pContext ){
                bool bResult = false;
                Statemachine pStm = this;
                do {
                    if (m_pPseudostate == S18Stm.Entry1.GetInstance()) {
                        pStm.BgnTrans( pContext, S181.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } else if (m_pCurrentState == S18Top.GetInstance() && m_pPseudostate == S18Stm.InitPt.GetInstance()) {
                        pStm.BgnTrans( pContext, S181.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } else if (m_pCurrentState != m_pPseudostate && m_pPseudostate is S18Top) {
                        pStm.BgnTrans( pContext, m_pPseudostate as TopState );
                        pStm.EndTrans( pContext );
                    } else {
                    }
                } while (false);
                return bResult;
            }
            public override bool Reset(Context pContext, Statemachine pParentStm, Pseudostate pEntryPoint) {
                m_pParentStm = pParentStm;
                if (pEntryPoint == null) {
                    if (IsFinished()) {
                        m_pPseudostate = InitPt.GetInstance();
                    }
                } else {
                    if (IsFinished()) {
                        m_pPseudostate = pEntryPoint;
                        return false;
                    } else {
                        m_pPseudostate = pEntryPoint;
                    }                    
                }
                if (pEntryPoint != null) {
                }
                return RunToCompletion(pContext);
            }
            public override bool EventProc(Context pContext, int nEventId, EventParams pParams){
                bool bResult = false;
                m_pLCAState = TopState.GetInstance();
                bResult |= m_pCurrentState.EventProc(pContext, this, nEventId, pParams);
                RunToCompletion(pContext);
                return bResult;
            }
            public override bool IsIn(TopState pCompositeState) {
                if (base.IsIn(pCompositeState)) { return true; }
                return false;
            }
            public override bool Abort(Context pContext) {
                m_pSourceState = S18Top.GetInstance();
                BgnTrans(pContext, S18Top.GetInstance());
                EndTrans(pContext);
                return true;
            }
            public override bool IsFinished() {
                return m_pCurrentState == S18Top.GetInstance() && m_pCurrentState == m_pPseudostate;
            }
            public S18Stm(): base(S18Top.GetInstance(), S18Top.GetInstance()) {}
        };
        class MainStm: Statemachine {
            public class StmTop: TopState {
                private static TopState singleInstance = new StmTop();
                public static new TopState GetInstance() { return singleInstance; }
            }
            S18Stm m_S18S18Stm = new S18Stm();                  
            S111Stm m_S111S111Stm = new S111Stm();              
            S112Stm m_S112S112Stm = new S112Stm();              
            TopState m_pS6History;
            TopState m_pS9History;
            public class InitPt: Pseudostate<InitPt>{};
            public class Junction: Pseudostate<Junction>{};
            public class S1: StmTop {
                private static TopState singleInstance = new S1();
                public static new TopState GetInstance() { return singleInstance; }
                public override void Entry(Context pContext, Statemachine pStm){
                    if( pStm.IsEnterable(GetInstance()) ){
                        Console.WriteLine(GetInstance().GetType() + "entry");
                    }
                }
                public override bool EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                    bool bResult = false;
                    pStm.m_pSourceState = GetInstance();
                    switch( (_EventId)nEventId ){
                    case _EventId.E1:{
                        pStm.BgnTrans( pContext, S2.GetInstance(), InitPt.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } break;
                    case _EventId.E2:{
                        int n = InputValue("Enter condition1: ");
                        if (n == 0) {
                            if (( ( MainStm )pStm ).m_pS6History != null) {
                                pStm.BgnTrans( pContext, ( ( MainStm )pStm ).m_pS6History );
                                pStm.EndTrans( pContext );
                                bResult = true;
                                break;
                            }
                            pStm.BgnTrans( pContext, S6.GetInstance(), InitPt.GetInstance() );
                            pStm.EndTrans( pContext );
                            bResult = true;
                        } else if (InputValue("Enter condition2: ") == 1) {
                            pStm.BgnTrans( pContext, S10.GetInstance() );
                            pStm.EndTrans( pContext );
                            bResult = true;
                        } else {
                            pStm.BgnTrans( pContext, S9.GetInstance(), InitPt.GetInstance() );
                            pStm.EndTrans( pContext );
                            bResult = true;
                        }
                    } break;
                    default: break;
                    }
                    return bResult;
                }
                public override void Exit(Context pContext, Statemachine pStm) {
                    if (pStm.IsExitable(GetInstance())) {
                        Console.WriteLine(GetInstance().GetType() + "exit");
                    }
                }
            };
            public class S2: StmTop {
                private static TopState singleInstance = new S2();
                public static new TopState GetInstance() { return singleInstance; }
                public override void Entry(Context pContext, Statemachine pStm){
                    if( pStm.IsEnterable(GetInstance()) ){
                        Console.WriteLine(GetInstance().GetType() + "entry");
                    }
                }
                public override bool EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                    bool bResult = false;
                    pStm.m_pSourceState = GetInstance();
                    switch( (_EventId)nEventId ){
                    case _EventId.E2:{
                        pStm.BgnTrans( pContext, S5.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } break;
                    case _EventId.E3:{
                        if (( ( MainStm )pStm ).m_pS6History != null) {
                            pStm.BgnTrans( pContext, ( ( MainStm )pStm ).m_pS6History );
                            pStm.EndTrans( pContext );
                            bResult = true;
                            break;
                        }
                        pStm.BgnTrans( pContext, S6.GetInstance(), InitPt.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } break;
                    default: break;
                    }
                    return bResult;
                }
                public override void Exit(Context pContext, Statemachine pStm) {
                    if (pStm.IsExitable(GetInstance())) {
                        Console.WriteLine(GetInstance().GetType() + "exit");
                    }
                }
            };
            public class S3: S2 {
                private static TopState singleInstance = new S3();
                public static new TopState GetInstance() { return singleInstance; }
                public override void Entry(Context pContext, Statemachine pStm){
                    if( pStm.IsEnterable(GetInstance()) ){
                        base.Entry( pContext, pStm );
                        Console.WriteLine(GetInstance().GetType() + "entry");
                    }
                }
                public override bool EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                    bool bResult = false;
                    pStm.m_pSourceState = GetInstance();
                    switch( (_EventId)nEventId ){
                    case _EventId.E0:{
                        pStm.BgnTrans( pContext, S4.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } break;
                    case _EventId.E1:{
                        pStm.BgnTrans( pContext, S5.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } break;
                    default: break;
                    }
                    return bResult ? bResult : base.EventProc( pContext, pStm, nEventId, pParams );
                }
                public override void Exit(Context pContext, Statemachine pStm) {
                    if (pStm.IsExitable(GetInstance())) {
                        Console.WriteLine(GetInstance().GetType() + "exit");
                        base.Exit(pContext, pStm);
                    }
                }
            };
            public class S4: S2 {
                private static TopState singleInstance = new S4();
                public static new TopState GetInstance() { return singleInstance; }
                public override void Entry(Context pContext, Statemachine pStm){
                    if( pStm.IsEnterable(GetInstance()) ){
                        base.Entry( pContext, pStm );
                        Console.WriteLine(GetInstance().GetType() + "entry");
                    }
                }
                public override bool EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                    bool bResult = false;
                    pStm.m_pSourceState = GetInstance();
                    switch( (_EventId)nEventId ){
                    case _EventId.E0:{
                        pStm.BgnTrans( pContext, S2.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } break;
                    default: break;
                    }
                    return bResult ? bResult : base.EventProc( pContext, pStm, nEventId, pParams );
                }
                public override void Exit(Context pContext, Statemachine pStm) {
                    if (pStm.IsExitable(GetInstance())) {
                        Console.WriteLine(GetInstance().GetType() + "exit");
                        base.Exit(pContext, pStm);
                    }
                }
            };
            public class S5: StmTop {
                private static TopState singleInstance = new S5();
                public static new TopState GetInstance() { return singleInstance; }
                public override void Entry(Context pContext, Statemachine pStm){
                    if( pStm.IsEnterable(GetInstance()) ){
                        Console.WriteLine(GetInstance().GetType() + "entry");
                    }
                }
                public override bool EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                    bool bResult = false;
                    pStm.m_pSourceState = GetInstance();
                    switch( (_EventId)nEventId ){
                    case _EventId.E0:{
                        pStm.BgnTrans( pContext, StmTop.GetInstance() );
                        pStm.m_pPseudostate = MainStm.Junction.GetInstance();
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } break;
                    default: break;
                    }
                    return bResult;
                }
                public override void Exit(Context pContext, Statemachine pStm) {
                    if (pStm.IsExitable(GetInstance())) {
                        Console.WriteLine(GetInstance().GetType() + "exit");
                    }
                }
            };
            public class S6: StmTop {
                private static TopState singleInstance = new S6();
                public static new TopState GetInstance() { return singleInstance; }
                public override void Entry(Context pContext, Statemachine pStm){
                    if( pStm.IsEnterable(GetInstance()) ){
                        Console.WriteLine(GetInstance().GetType() + "entry");
                    }
                }
                public override bool EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                    bool bResult = false;
                    pStm.m_pSourceState = GetInstance();
                    switch( (_EventId)nEventId ){
                    case _EventId.E1:{
                        pStm.BgnTrans( pContext, StmTop.GetInstance() );
                        pStm.m_pPseudostate = MainStm.Junction.GetInstance();
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } break;
                    case _EventId.E2:{
                        pStm.m_bIsExternTrans = true;
                        pStm.BgnTrans( pContext, S8.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } break;
                    default: break;
                    }
                    return bResult;
                }
                public override void Exit(Context pContext, Statemachine pStm) {
                    if (pStm.IsExitable(GetInstance())) {
                        Console.WriteLine(GetInstance().GetType() + "exit");
                    }
                }
            };
            public class S7: S6 {
                private static TopState singleInstance = new S7();
                public static new TopState GetInstance() { return singleInstance; }
                public override void Entry(Context pContext, Statemachine pStm){
                    if( pStm.IsEnterable(GetInstance()) ){
                        base.Entry( pContext, pStm );
                        Console.WriteLine(GetInstance().GetType() + "entry");
                        ((MainStm)pStm).m_pS6History = S7.GetInstance();
                    }
                }
                public override bool EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                    bool bResult = false;
                    pStm.m_pSourceState = GetInstance();
                    switch( (_EventId)nEventId ){
                    case _EventId.E1:{
                        pStm.BgnTrans( pContext, S8.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } break;
                    default: break;
                    }
                    return bResult ? bResult : base.EventProc( pContext, pStm, nEventId, pParams );
                }
                public override void Exit(Context pContext, Statemachine pStm) {
                    if (pStm.IsExitable(GetInstance())) {
                        Console.WriteLine(GetInstance().GetType() + "exit");
                        base.Exit(pContext, pStm);
                    }
                }
            };
            public class S8: S6 {
                private static TopState singleInstance = new S8();
                public static new TopState GetInstance() { return singleInstance; }
                public override void Entry(Context pContext, Statemachine pStm){
                    if( pStm.IsEnterable(GetInstance()) ){
                        base.Entry( pContext, pStm );
                        Console.WriteLine(GetInstance().GetType() + "entry");
                        ((MainStm)pStm).m_pS6History = S8.GetInstance();
                    }
                }
                public override bool EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                    bool bResult = false;
                    pStm.m_pSourceState = GetInstance();
                    return bResult ? bResult : base.EventProc( pContext, pStm, nEventId, pParams );
                }
                public override void Exit(Context pContext, Statemachine pStm) {
                    if (pStm.IsExitable(GetInstance())) {
                        Console.WriteLine(GetInstance().GetType() + "exit");
                        base.Exit(pContext, pStm);
                    }
                }
            };
            public class S18: StmTop {
                private static TopState singleInstance = new S18();
                public static new TopState GetInstance() { return singleInstance; }
                public override void Entry(Context pContext, Statemachine pStm){
                    if( pStm.IsEnterable(GetInstance()) ){
                        Console.WriteLine(GetInstance().GetType() + "entry");
                        ((MainStm)pStm).m_S18S18Stm.Reset( pContext, pStm, null );
                    }
                }
                public override bool EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                    bool bResult = false;
                    pStm.m_pSourceState = GetInstance();
                    switch( (_EventId)nEventId ){
                    case _EventId.E3:{
                        pStm.BgnTrans( pContext, S19.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } break;
                    case _EventId.E4:{
                        if (( ( MainStm )pStm ).m_pS6History != null) {
                            pStm.BgnTrans( pContext, ( ( MainStm )pStm ).m_pS6History );
                            pStm.EndTrans( pContext );
                            bResult = true;
                            break;
                        }
                        pStm.BgnTrans( pContext, S6.GetInstance(), InitPt.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } break;
                    default: break;
                    }
                    return bResult;
                }
                public override void Exit(Context pContext, Statemachine pStm) {
                    if (pStm.IsExitable(GetInstance())) {
                        ((MainStm)pStm).m_S18S18Stm.Abort( pContext );
                        Console.WriteLine(GetInstance().GetType() + "exit");
                    }
                }
            };
            public class S11: StmTop {
                private static TopState singleInstance = new S11();
                public static new TopState GetInstance() { return singleInstance; }
                public override void Entry(Context pContext, Statemachine pStm){
                    if( pStm.IsEnterable(GetInstance()) ){
                        Console.WriteLine(GetInstance().GetType() + "entry");
                        ((MainStm)pStm).m_S111S111Stm.Reset( pContext, pStm, null );
                        ((MainStm)pStm).m_S112S112Stm.Reset( pContext, pStm, null );
                    }
                }
                public override bool EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                    bool bResult = false;
                    pStm.m_pSourceState = GetInstance();
                    switch( (_EventId)nEventId ){
                    case _EventId.E4:{
                        pStm.BgnTrans( pContext, StmTop.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } break;
                    case _EventId.E5:{
                        if (( ( MainStm )pStm ).m_pS9History != null) {
                            pStm.BgnTrans( pContext, ( ( MainStm )pStm ).m_pS9History );
                            pStm.EndTrans( pContext );
                            bResult = true;
                            break;
                        }
                    } break;
                    default: break;
                    }
                    return bResult;
                }
                public override void Exit(Context pContext, Statemachine pStm) {
                    if (pStm.IsExitable(GetInstance())) {
                        ((MainStm)pStm).m_S111S111Stm.Abort( pContext );
                        ((MainStm)pStm).m_S112S112Stm.Abort( pContext );
                        Console.WriteLine(GetInstance().GetType() + "exit");
                    }
                }
            };
            public class S12: S11 {
                private static TopState singleInstance = new S12();
                public static new TopState GetInstance() { return singleInstance; }
                public override void Entry(Context pContext, Statemachine pStm){
                    if( pStm.IsEnterable(GetInstance()) ){
                        base.Entry( pContext, pStm );
                        Console.WriteLine(GetInstance().GetType() + "entry");
                    }
                }
                public override bool EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                    bool bResult = false;
                    pStm.m_pSourceState = GetInstance();
                    switch( (_EventId)nEventId ){
                    case _EventId.E1:{
                        pStm.BgnTrans( pContext, S13.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } break;
                    default: break;
                    }
                    return bResult ? bResult : base.EventProc( pContext, pStm, nEventId, pParams );
                }
                public override void Exit(Context pContext, Statemachine pStm) {
                    if (pStm.IsExitable(GetInstance())) {
                        Console.WriteLine(GetInstance().GetType() + "exit");
                        base.Exit(pContext, pStm);
                    }
                }
            };
            public class S13: S11 {
                private static TopState singleInstance = new S13();
                public static new TopState GetInstance() { return singleInstance; }
                public override void Entry(Context pContext, Statemachine pStm){
                    if( pStm.IsEnterable(GetInstance()) ){
                        base.Entry( pContext, pStm );
                        Console.WriteLine(GetInstance().GetType() + "entry");
                    }
                }
                public override bool EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                    bool bResult = false;
                    pStm.m_pSourceState = GetInstance();
                    switch( (_EventId)nEventId ){
                    case _EventId.E5:{
                        if (((ContextImpl)pContext).IsIn(S111Stm.S15.GetInstance())) {
                            pStm.BgnTrans( pContext, S20.GetInstance() );
                            pStm.EndTrans( pContext );
                            bResult = true;
                        }
                    } break;
                    default: break;
                    }
                    return bResult ? bResult : base.EventProc( pContext, pStm, nEventId, pParams );
                }
                public override void Exit(Context pContext, Statemachine pStm) {
                    if (pStm.IsExitable(GetInstance())) {
                        Console.WriteLine(GetInstance().GetType() + "exit");
                        base.Exit(pContext, pStm);
                    }
                }
            };
            public class S9: StmTop {
                private static TopState singleInstance = new S9();
                public static new TopState GetInstance() { return singleInstance; }
                public override void Entry(Context pContext, Statemachine pStm){
                    if( pStm.IsEnterable(GetInstance()) ){
                        Console.WriteLine(GetInstance().GetType() + "entry");
                    }
                }
                public override bool EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                    bool bResult = false;
                    pStm.m_pSourceState = GetInstance();
                    switch( (_EventId)nEventId ){
                    case _EventId.E1:{
                        pStm.m_bIsExternTrans = true;
                        pStm.BgnTrans( pContext, S91.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } break;
                    case _EventId.E2:{
                        pStm.BgnTrans( pContext, S92.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } break;
                    case _EventId.E3:{
                        pStm.BgnTrans( pContext, S11.GetInstance(), InitPt.GetInstance() );
                        ((MainStm)pStm).m_S111S111Stm.Reset(pContext, pStm, S111Stm.Entry1.GetInstance());
                        ((MainStm)pStm).m_S112S112Stm.Reset(pContext, pStm, S112Stm.Entry1.GetInstance());
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } break;
                    default: break;
                    }
                    return bResult;
                }
                public override void Exit(Context pContext, Statemachine pStm) {
                    if (pStm.IsExitable(GetInstance())) {
                        Console.WriteLine(GetInstance().GetType() + "exit");
                    }
                }
            };
            public class S91: S9 {
                private static TopState singleInstance = new S91();
                public static new TopState GetInstance() { return singleInstance; }
                public override void Entry(Context pContext, Statemachine pStm){
                    if( pStm.IsEnterable(GetInstance()) ){
                        base.Entry( pContext, pStm );
                        Console.WriteLine(GetInstance().GetType() + "entry");
                        ((MainStm)pStm).m_pS9History = S91.GetInstance();
                    }
                }
                public override bool EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                    bool bResult = false;
                    pStm.m_pSourceState = GetInstance();
                    return bResult ? bResult : base.EventProc( pContext, pStm, nEventId, pParams );
                }
                public override void Exit(Context pContext, Statemachine pStm) {
                    if (pStm.IsExitable(GetInstance())) {
                        Console.WriteLine(GetInstance().GetType() + "exit");
                        base.Exit(pContext, pStm);
                    }
                }
            };
            public class S92: S9 {
                private static TopState singleInstance = new S92();
                public static new TopState GetInstance() { return singleInstance; }
                public override void Entry(Context pContext, Statemachine pStm){
                    if( pStm.IsEnterable(GetInstance()) ){
                        base.Entry( pContext, pStm );
                        Console.WriteLine(GetInstance().GetType() + "entry");
                        ((MainStm)pStm).m_pS9History = S92.GetInstance();
                    }
                }
                public override bool EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                    bool bResult = false;
                    pStm.m_pSourceState = GetInstance();
                    return bResult ? bResult : base.EventProc( pContext, pStm, nEventId, pParams );
                }
                public override void Exit(Context pContext, Statemachine pStm) {
                    if (pStm.IsExitable(GetInstance())) {
                        Console.WriteLine(GetInstance().GetType() + "exit");
                        base.Exit(pContext, pStm);
                    }
                }
            };
            public class S19: StmTop {
                private static TopState singleInstance = new S19();
                public static new TopState GetInstance() { return singleInstance; }
                public override void Entry(Context pContext, Statemachine pStm){
                    if( pStm.IsEnterable(GetInstance()) ){
                        Console.WriteLine(GetInstance().GetType() + "entry");
                    }
                }
                public override bool EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                    bool bResult = false;
                    pStm.m_pSourceState = GetInstance();
                    switch( (_EventId)nEventId ){
                    case _EventId.E0:{
                        pStm.BgnTrans( pContext, S20.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } break;
                    default: break;
                    }
                    return bResult;
                }
                public override void Exit(Context pContext, Statemachine pStm) {
                    if (pStm.IsExitable(GetInstance())) {
                        Console.WriteLine(GetInstance().GetType() + "exit");
                    }
                }
            };
            public class S20: StmTop {
                private static TopState singleInstance = new S20();
                public static new TopState GetInstance() { return singleInstance; }
                public override void Entry(Context pContext, Statemachine pStm){
                    if( pStm.IsEnterable(GetInstance()) ){
                        Console.WriteLine(GetInstance().GetType() + "entry");
                    }
                }
                public override bool EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                    bool bResult = false;
                    pStm.m_pSourceState = GetInstance();
                    switch( (_EventId)nEventId ){
                    case _EventId.E1:{
                        pStm.BgnTrans( pContext, StmTop.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } break;
                    case _EventId.E2:{
                        pStm.BgnTrans( pContext, S11.GetInstance(), InitPt.GetInstance() );
                        ((MainStm)pStm).m_S112S112Stm.Reset(pContext, pStm, S112Stm.Entry2.GetInstance());
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } break;
                    default: break;
                    }
                    return bResult;
                }
                public override void Exit(Context pContext, Statemachine pStm) {
                    if (pStm.IsExitable(GetInstance())) {
                        Console.WriteLine(GetInstance().GetType() + "exit");
                    }
                }
            };
            public class S10: StmTop {
                private static TopState singleInstance = new S10();
                public static new TopState GetInstance() { return singleInstance; }
                public override void Entry(Context pContext, Statemachine pStm){
                    if( pStm.IsEnterable(GetInstance()) ){
                        Console.WriteLine(GetInstance().GetType() + "entry");
                    }
                }
                public override bool EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                    bool bResult = false;
                    pStm.m_pSourceState = GetInstance();
                    switch( (_EventId)nEventId ){
                    case _EventId.E1:{
                        pStm.m_bIsExternTrans = true;
                        pStm.BgnTrans( pContext, S10.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } break;
                    case _EventId.E2:{
                        int n = InputValue("Enter condition1: ");
                        if (n == 0) {
                            pStm.BgnTrans( pContext, S7.GetInstance() );
                            pStm.EndTrans( pContext );
                            bResult = true;
                        } else if (n == 1) {
                            pStm.BgnTrans( pContext, S11.GetInstance(), InitPt.GetInstance() );
                            pStm.EndTrans( pContext );
                            bResult = true;
                        } else {
                            pStm.BgnTrans( pContext, S18.GetInstance() );
                            ((MainStm)pStm).m_S18S18Stm.Reset(pContext, pStm, S18Stm.Entry1.GetInstance());
                            pStm.EndTrans( pContext );
                            bResult = true;
                        }
                    } break;
                    default: break;
                    }
                    return bResult;
                }
                public override void Exit(Context pContext, Statemachine pStm) {
                    if (pStm.IsExitable(GetInstance())) {
                        Console.WriteLine(GetInstance().GetType() + "exit");
                    }
                }
            };
            public override bool DefaultTrans( Context pContext ){
                bool bResult = false;
                Statemachine pStm = this;
                bResult |= m_S18S18Stm.DefaultTrans( pContext );
                bResult |= m_S111S111Stm.DefaultTrans( pContext );
                bResult |= m_S112S112Stm.DefaultTrans( pContext );
                do {
                    if (m_pCurrentState == StmTop.GetInstance() && m_pPseudostate == MainStm.InitPt.GetInstance()) {
                        pStm.BgnTrans( pContext, S1.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } else if (m_pCurrentState == S2.GetInstance() && m_pPseudostate == MainStm.InitPt.GetInstance()) {
                        pStm.BgnTrans( pContext, S3.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } else if (m_pCurrentState == S6.GetInstance() && m_pPseudostate == MainStm.InitPt.GetInstance()) {
                        pStm.BgnTrans( pContext, S7.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } else if (m_pPseudostate == MainStm.Junction.GetInstance()) {
                        pStm.BgnTrans( pContext, S18.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } else if (m_pCurrentState == S18.GetInstance() && m_pPseudostate == S18Stm.Exit1.GetInstance()) {
                        pStm.BgnTrans( pContext, S19.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } else if (m_pCurrentState == S11.GetInstance() && m_pPseudostate == MainStm.InitPt.GetInstance()) {
                        pStm.BgnTrans( pContext, S12.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } else if (m_pCurrentState == S9.GetInstance() && m_pPseudostate == MainStm.InitPt.GetInstance()) {
                        pStm.BgnTrans( pContext, S91.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } else if (m_pCurrentState != m_pPseudostate && m_pPseudostate is StmTop) {
                        pStm.BgnTrans( pContext, m_pPseudostate as TopState );
                        pStm.EndTrans( pContext );
                    } else {
                    }
                } while (false);
                return bResult;
            }
            public override bool Reset(Context pContext, Statemachine pParentStm, Pseudostate pEntryPoint) {
                m_pParentStm = pParentStm;
                if (pEntryPoint == null) {
                    if (IsFinished()) {
                        m_pPseudostate = InitPt.GetInstance();
                    }
                } else {
                    if (IsFinished()) {
                        m_pPseudostate = pEntryPoint;
                        return false;
                    } else {
                        m_pPseudostate = pEntryPoint;
                    }                    
                }
                if (pEntryPoint != null) {
                    m_S18S18Stm.Reset( pContext, this, pEntryPoint );
                    m_S111S111Stm.Reset( pContext, this, pEntryPoint );
                    m_S112S112Stm.Reset( pContext, this, pEntryPoint );
                }
                return RunToCompletion(pContext);
            }
            public override bool EventProc(Context pContext, int nEventId, EventParams pParams){
                bool bResult = false;
                m_pLCAState = TopState.GetInstance();
                bResult |= m_S18S18Stm.EventProc( pContext, nEventId, pParams );
                bResult |= m_S111S111Stm.EventProc( pContext, nEventId, pParams );
                bResult |= m_S112S112Stm.EventProc( pContext, nEventId, pParams );
                bResult |= m_pCurrentState.EventProc(pContext, this, nEventId, pParams);
                RunToCompletion(pContext);
                return bResult;
            }
            public override bool IsIn(TopState pCompositeState) {
                if (m_S18S18Stm.IsIn(pCompositeState)) { return true; }
                if (m_S111S111Stm.IsIn(pCompositeState)) { return true; }
                if (m_S112S112Stm.IsIn(pCompositeState)) { return true; }
                if (base.IsIn(pCompositeState)) { return true; }
                return false;
            }
            public override bool Abort(Context pContext) {
                m_pSourceState = StmTop.GetInstance();
                BgnTrans(pContext, StmTop.GetInstance());
                EndTrans(pContext);
                return true;
            }
            public override bool IsFinished() {
                return m_pCurrentState == StmTop.GetInstance() && m_pCurrentState == m_pPseudostate;
            }
            public MainStm(): base(StmTop.GetInstance(), StmTop.GetInstance()) {}
        };
        public  ContextImpl(
            int _attribute0,
            Composition _aComposition
        ):  base( _attribute0, _aComposition )
        {
            attribute2 = 123;
            attribute3 = 789;
        }                                                                                       
        private int attribute2;                                 
        private int attribute3;                                 
        MainStm mainStm = new MainStm();                        
        public bool Start() {
            mainStm.Abort(this);
            return mainStm.Reset(this, null, null);
        }
        public bool EventProc(int nEventId, EventParams pParams) {
            return mainStm.EventProc(this, nEventId, pParams);
        }
        public bool IsIn(TopState pState) {
            return mainStm.IsIn(pState);
        }
    }
}
