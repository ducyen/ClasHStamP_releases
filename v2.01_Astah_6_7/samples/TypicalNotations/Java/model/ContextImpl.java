/* File generated by Đức's ClasHStamP */
package model;

import java.io.*;
import java.util.*;
import model.*;
import base.*;

public  class ContextImpl extends Context
{
    public enum _EventId {
        E0,
        E1,
        E2,
        E3,
        E4,
        E5,
        Num
    };
    static class S111Stm extends Statemachine {
        public static class S111Top extends TopState {
            private static TopState singleInstance = new S111Top();
            public static TopState GetInstance() { return singleInstance; }
        }
        public static class Entry1 extends Pseudostate {
            private static Pseudostate singleInstance = new Entry1();
            public static Pseudostate GetInstance() { return singleInstance; }
        }
        public static class InitPt extends Pseudostate {
            private static Pseudostate singleInstance = new InitPt();
            public static Pseudostate GetInstance() { return singleInstance; }
        }
        public static class S14 extends S111Top {
            private static TopState singleInstance = new S14();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    System.out.println(GetInstance().getClass() + "entry");
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                switch( _EventId.values()[nEventId] ){
                case E2:{
                    pStm.BgnTrans( pContext, S15.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                default: break;
                }
                return bResult;
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                }
            }
        };
        public static class S15 extends S111Top {
            private static TopState singleInstance = new S15();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    System.out.println(GetInstance().getClass() + "entry");
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                return bResult;
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                }
            }
        };
        public boolean DefaultTrans( Context pContext ){
            boolean bResult = false;
            Statemachine pStm = this;
            do {
                if (m_pPseudostate == S111Stm.Entry1.GetInstance()) {
                    pStm.BgnTrans( pContext, S14.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } else if (m_pCurrentState == S111Top.GetInstance() && m_pPseudostate == S111Stm.InitPt.GetInstance()) {
                    pStm.BgnTrans( pContext, S15.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } else if (m_pCurrentState != m_pPseudostate && m_pPseudostate instanceof S111Top) {
                    pStm.BgnTrans( pContext, (TopState)m_pPseudostate );
                    pStm.EndTrans( pContext );
                } else {
                }
            } while (false);
            return bResult;
        }
        public boolean Reset(Context pContext, Statemachine pParentStm, Pseudostate pEntryPoint) {
            m_pParentStm = pParentStm;
            if (pEntryPoint == null) {
                if (IsFinished()) {
                    m_pPseudostate = InitPt.GetInstance();
                }
            } else {
                if (IsFinished()) {
                    m_pPseudostate = pEntryPoint;
                    return false;
                } else {
                    m_pPseudostate = pEntryPoint;
                }                    
            }
            if (pEntryPoint != null) {
            }
            return RunToCompletion(pContext);
        }
        public boolean EventProc(Context pContext, int nEventId, EventParams pParams){
            boolean bResult = false;
            m_pLCAState = TopState.GetInstance();
            bResult = m_pCurrentState.EventProc(pContext, this, nEventId, pParams);
            RunToCompletion(pContext);
            return bResult;
        }
        public boolean IsIn(TopState pCompositeState) {
            if (super.IsIn(pCompositeState)) { return true; }
            return false;
        }
        public boolean Abort(Context pContext) {
            m_pSourceState = S111Top.GetInstance();
            BgnTrans(pContext, S111Top.GetInstance());
            EndTrans(pContext);
            return true;
        }
        public boolean IsFinished() {
            return m_pCurrentState == S111Top.GetInstance() && m_pCurrentState == m_pPseudostate;
        }
        public S111Stm(){ super(S111Top.GetInstance(), S111Top.GetInstance()); }
    };
    static class S112Stm extends Statemachine {
        public static class S112Top extends TopState {
            private static TopState singleInstance = new S112Top();
            public static TopState GetInstance() { return singleInstance; }
        }
        public static class Entry1 extends Pseudostate {
            private static Pseudostate singleInstance = new Entry1();
            public static Pseudostate GetInstance() { return singleInstance; }
        }
        public static class InitPt extends Pseudostate {
            private static Pseudostate singleInstance = new InitPt();
            public static Pseudostate GetInstance() { return singleInstance; }
        }
        public static class Entry2 extends Pseudostate {
            private static Pseudostate singleInstance = new Entry2();
            public static Pseudostate GetInstance() { return singleInstance; }
        }
        public static class S16 extends S112Top {
            private static TopState singleInstance = new S16();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    System.out.println(GetInstance().getClass() + "entry");
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                switch( _EventId.values()[nEventId] ){
                case E3:{
                    pStm.BgnTrans( pContext, S17.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                default: break;
                }
                return bResult;
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                }
            }
        };
        public static class S17 extends S112Top {
            private static TopState singleInstance = new S17();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    System.out.println(GetInstance().getClass() + "entry");
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                return bResult;
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                }
            }
        };
        public boolean DefaultTrans( Context pContext ){
            boolean bResult = false;
            Statemachine pStm = this;
            do {
                if (m_pPseudostate == S112Stm.Entry1.GetInstance()) {
                    pStm.BgnTrans( pContext, S16.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } else if (m_pCurrentState == S112Top.GetInstance() && m_pPseudostate == S112Stm.InitPt.GetInstance()) {
                    pStm.BgnTrans( pContext, S16.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } else if (m_pPseudostate == S112Stm.Entry2.GetInstance()) {
                    pStm.BgnTrans( pContext, S17.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } else if (m_pCurrentState != m_pPseudostate && m_pPseudostate instanceof S112Top) {
                    pStm.BgnTrans( pContext, (TopState)m_pPseudostate );
                    pStm.EndTrans( pContext );
                } else {
                }
            } while (false);
            return bResult;
        }
        public boolean Reset(Context pContext, Statemachine pParentStm, Pseudostate pEntryPoint) {
            m_pParentStm = pParentStm;
            if (pEntryPoint == null) {
                if (IsFinished()) {
                    m_pPseudostate = InitPt.GetInstance();
                }
            } else {
                if (IsFinished()) {
                    m_pPseudostate = pEntryPoint;
                    return false;
                } else {
                    m_pPseudostate = pEntryPoint;
                }                    
            }
            if (pEntryPoint != null) {
            }
            return RunToCompletion(pContext);
        }
        public boolean EventProc(Context pContext, int nEventId, EventParams pParams){
            boolean bResult = false;
            m_pLCAState = TopState.GetInstance();
            bResult = m_pCurrentState.EventProc(pContext, this, nEventId, pParams);
            RunToCompletion(pContext);
            return bResult;
        }
        public boolean IsIn(TopState pCompositeState) {
            if (super.IsIn(pCompositeState)) { return true; }
            return false;
        }
        public boolean Abort(Context pContext) {
            m_pSourceState = S112Top.GetInstance();
            BgnTrans(pContext, S112Top.GetInstance());
            EndTrans(pContext);
            return true;
        }
        public boolean IsFinished() {
            return m_pCurrentState == S112Top.GetInstance() && m_pCurrentState == m_pPseudostate;
        }
        public S112Stm(){ super(S112Top.GetInstance(), S112Top.GetInstance()); }
    };
    static class S18Stm extends Statemachine {
        public static class S18Top extends TopState {
            private static TopState singleInstance = new S18Top();
            public static TopState GetInstance() { return singleInstance; }
        }
        public static class Entry1 extends Pseudostate {
            private static Pseudostate singleInstance = new Entry1();
            public static Pseudostate GetInstance() { return singleInstance; }
        }
        public static class Exit1 extends Pseudostate {
            private static Pseudostate singleInstance = new Exit1();
            public static Pseudostate GetInstance() { return singleInstance; }
        }
        public static class InitPt extends Pseudostate {
            private static Pseudostate singleInstance = new InitPt();
            public static Pseudostate GetInstance() { return singleInstance; }
        }
        public static class S181 extends S18Top {
            private static TopState singleInstance = new S181();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    System.out.println(GetInstance().getClass() + "entry");
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                switch( _EventId.values()[nEventId] ){
                case E0:{
                    pStm.BgnTrans( pContext, S182.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                default: break;
                }
                return bResult;
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                }
            }
        };
        public static class S182 extends S18Top {
            private static TopState singleInstance = new S182();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    System.out.println(GetInstance().getClass() + "entry");
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                switch( _EventId.values()[nEventId] ){
                case E2:{
                    pStm.BgnTrans( pContext, S18Top.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                case E3:{
                    pStm.BgnTrans( pContext, S18Top.GetInstance() );
                    pStm.m_pParentStm.m_pPseudostate = S18Stm.Exit1.GetInstance();
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                default: break;
                }
                return bResult;
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                }
            }
        };
        public boolean DefaultTrans( Context pContext ){
            boolean bResult = false;
            Statemachine pStm = this;
            do {
                if (m_pPseudostate == S18Stm.Entry1.GetInstance()) {
                    pStm.BgnTrans( pContext, S181.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } else if (m_pCurrentState == S18Top.GetInstance() && m_pPseudostate == S18Stm.InitPt.GetInstance()) {
                    pStm.BgnTrans( pContext, S181.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } else if (m_pCurrentState != m_pPseudostate && m_pPseudostate instanceof S18Top) {
                    pStm.BgnTrans( pContext, (TopState)m_pPseudostate );
                    pStm.EndTrans( pContext );
                } else {
                }
            } while (false);
            return bResult;
        }
        public boolean Reset(Context pContext, Statemachine pParentStm, Pseudostate pEntryPoint) {
            m_pParentStm = pParentStm;
            if (pEntryPoint == null) {
                if (IsFinished()) {
                    m_pPseudostate = InitPt.GetInstance();
                }
            } else {
                if (IsFinished()) {
                    m_pPseudostate = pEntryPoint;
                    return false;
                } else {
                    m_pPseudostate = pEntryPoint;
                }                    
            }
            if (pEntryPoint != null) {
            }
            return RunToCompletion(pContext);
        }
        public boolean EventProc(Context pContext, int nEventId, EventParams pParams){
            boolean bResult = false;
            m_pLCAState = TopState.GetInstance();
            bResult = m_pCurrentState.EventProc(pContext, this, nEventId, pParams);
            RunToCompletion(pContext);
            return bResult;
        }
        public boolean IsIn(TopState pCompositeState) {
            if (super.IsIn(pCompositeState)) { return true; }
            return false;
        }
        public boolean Abort(Context pContext) {
            m_pSourceState = S18Top.GetInstance();
            BgnTrans(pContext, S18Top.GetInstance());
            EndTrans(pContext);
            return true;
        }
        public boolean IsFinished() {
            return m_pCurrentState == S18Top.GetInstance() && m_pCurrentState == m_pPseudostate;
        }
        public S18Stm(){ super(S18Top.GetInstance(), S18Top.GetInstance()); }
    };
    static class MainStm extends Statemachine {
        public static class StmTop extends TopState {
            private static TopState singleInstance = new StmTop();
            public static TopState GetInstance() { return singleInstance; }
        }
        S18Stm m_S18S18Stm = new S18Stm();                      
        S111Stm m_S111S111Stm = new S111Stm();                  
        S112Stm m_S112S112Stm = new S112Stm();                  
        TopState m_pS6History;
        TopState m_pS9History;
        public static class InitPt extends Pseudostate {
            private static Pseudostate singleInstance = new InitPt();
            public static Pseudostate GetInstance() { return singleInstance; }
        }
        public static class Junction extends Pseudostate {
            private static Pseudostate singleInstance = new Junction();
            public static Pseudostate GetInstance() { return singleInstance; }
        }
        public static class S1 extends StmTop {
            private static TopState singleInstance = new S1();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    System.out.println(GetInstance().getClass() + "entry");
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                switch( _EventId.values()[nEventId] ){
                case E1:{
                    pStm.BgnTrans( pContext, S2.GetInstance(), InitPt.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                case E2:{
                    int n = InputValue("Enter condition1: ");
                    if (n == 0) {
                        if (( ( MainStm )pStm ).m_pS6History != null) {
                            pStm.BgnTrans( pContext, ( ( MainStm )pStm ).m_pS6History );
                            pStm.EndTrans( pContext );
                            bResult = true;
                            break;
                        }
                        pStm.BgnTrans( pContext, S6.GetInstance(), InitPt.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } else if (InputValue("Enter condition2: ") == 1) {
                        pStm.BgnTrans( pContext, S10.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } else {
                        pStm.BgnTrans( pContext, S9.GetInstance(), InitPt.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    }
                } break;
                default: break;
                }
                return bResult;
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                }
            }
        };
        public static class S2 extends StmTop {
            private static TopState singleInstance = new S2();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    System.out.println(GetInstance().getClass() + "entry");
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                switch( _EventId.values()[nEventId] ){
                case E2:{
                    pStm.BgnTrans( pContext, S5.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                case E3:{
                    if (( ( MainStm )pStm ).m_pS6History != null) {
                        pStm.BgnTrans( pContext, ( ( MainStm )pStm ).m_pS6History );
                        pStm.EndTrans( pContext );
                        bResult = true;
                        break;
                    }
                    pStm.BgnTrans( pContext, S6.GetInstance(), InitPt.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                default: break;
                }
                return bResult;
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                }
            }
        };
        public static class S3 extends S2 {
            private static TopState singleInstance = new S3();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    super.Entry( pContext, pStm );
                    System.out.println(GetInstance().getClass() + "entry");
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                switch( _EventId.values()[nEventId] ){
                case E0:{
                    pStm.BgnTrans( pContext, S4.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                case E1:{
                    pStm.BgnTrans( pContext, S5.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                default: break;
                }
                return bResult ? bResult : super.EventProc( pContext, pStm, nEventId, pParams );
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                    super.Exit(pContext, pStm);
                }
            }
        };
        public static class S4 extends S2 {
            private static TopState singleInstance = new S4();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    super.Entry( pContext, pStm );
                    System.out.println(GetInstance().getClass() + "entry");
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                switch( _EventId.values()[nEventId] ){
                case E0:{
                    pStm.BgnTrans( pContext, S2.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                default: break;
                }
                return bResult ? bResult : super.EventProc( pContext, pStm, nEventId, pParams );
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                    super.Exit(pContext, pStm);
                }
            }
        };
        public static class S5 extends StmTop {
            private static TopState singleInstance = new S5();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    System.out.println(GetInstance().getClass() + "entry");
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                switch( _EventId.values()[nEventId] ){
                case E0:{
                    pStm.BgnTrans( pContext, StmTop.GetInstance() );
                    pStm.m_pPseudostate = MainStm.Junction.GetInstance();
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                default: break;
                }
                return bResult;
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                }
            }
        };
        public static class S6 extends StmTop {
            private static TopState singleInstance = new S6();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    System.out.println(GetInstance().getClass() + "entry");
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                switch( _EventId.values()[nEventId] ){
                case E1:{
                    pStm.BgnTrans( pContext, StmTop.GetInstance() );
                    pStm.m_pPseudostate = MainStm.Junction.GetInstance();
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                case E2:{
                    pStm.m_bIsExternTrans = true;
                    pStm.BgnTrans( pContext, S8.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                default: break;
                }
                return bResult;
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                }
            }
        };
        public static class S7 extends S6 {
            private static TopState singleInstance = new S7();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    super.Entry( pContext, pStm );
                    System.out.println(GetInstance().getClass() + "entry");
                    ((MainStm)pStm).m_pS6History = S7.GetInstance();
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                switch( _EventId.values()[nEventId] ){
                case E1:{
                    pStm.BgnTrans( pContext, S8.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                default: break;
                }
                return bResult ? bResult : super.EventProc( pContext, pStm, nEventId, pParams );
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                    super.Exit(pContext, pStm);
                }
            }
        };
        public static class S8 extends S6 {
            private static TopState singleInstance = new S8();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    super.Entry( pContext, pStm );
                    System.out.println(GetInstance().getClass() + "entry");
                    ((MainStm)pStm).m_pS6History = S8.GetInstance();
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                return bResult ? bResult : super.EventProc( pContext, pStm, nEventId, pParams );
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                    super.Exit(pContext, pStm);
                }
            }
        };
        public static class S18 extends StmTop {
            private static TopState singleInstance = new S18();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    System.out.println(GetInstance().getClass() + "entry");
                    ((MainStm)pStm).m_S18S18Stm.Reset( pContext, pStm, null );
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                switch( _EventId.values()[nEventId] ){
                case E3:{
                    pStm.BgnTrans( pContext, S19.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                case E4:{
                    if (( ( MainStm )pStm ).m_pS6History != null) {
                        pStm.BgnTrans( pContext, ( ( MainStm )pStm ).m_pS6History );
                        pStm.EndTrans( pContext );
                        bResult = true;
                        break;
                    }
                    pStm.BgnTrans( pContext, S6.GetInstance(), InitPt.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                default: break;
                }
                return bResult;
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    ((MainStm)pStm).m_S18S18Stm.Abort( pContext );
                    System.out.println(GetInstance().getClass() + "exit");
                }
            }
        };
        public static class S11 extends StmTop {
            private static TopState singleInstance = new S11();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    System.out.println(GetInstance().getClass() + "entry");
                    ((MainStm)pStm).m_S111S111Stm.Reset( pContext, pStm, null );
                    ((MainStm)pStm).m_S112S112Stm.Reset( pContext, pStm, null );
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                switch( _EventId.values()[nEventId] ){
                case E4:{
                    pStm.BgnTrans( pContext, StmTop.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                case E5:{
                    if (( ( MainStm )pStm ).m_pS9History != null) {
                        pStm.BgnTrans( pContext, ( ( MainStm )pStm ).m_pS9History );
                        pStm.EndTrans( pContext );
                        bResult = true;
                        break;
                    }
                } break;
                default: break;
                }
                return bResult;
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    ((MainStm)pStm).m_S111S111Stm.Abort( pContext );
                    ((MainStm)pStm).m_S112S112Stm.Abort( pContext );
                    System.out.println(GetInstance().getClass() + "exit");
                }
            }
        };
        public static class S12 extends S11 {
            private static TopState singleInstance = new S12();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    super.Entry( pContext, pStm );
                    System.out.println(GetInstance().getClass() + "entry");
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                switch( _EventId.values()[nEventId] ){
                case E1:{
                    pStm.BgnTrans( pContext, S13.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                default: break;
                }
                return bResult ? bResult : super.EventProc( pContext, pStm, nEventId, pParams );
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                    super.Exit(pContext, pStm);
                }
            }
        };
        public static class S13 extends S11 {
            private static TopState singleInstance = new S13();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    super.Entry( pContext, pStm );
                    System.out.println(GetInstance().getClass() + "entry");
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                switch( _EventId.values()[nEventId] ){
                case E5:{
                    if (((ContextImpl)pContext).IsIn(S111Stm.S15.GetInstance())) {
                        pStm.BgnTrans( pContext, S20.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    }
                } break;
                default: break;
                }
                return bResult ? bResult : super.EventProc( pContext, pStm, nEventId, pParams );
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                    super.Exit(pContext, pStm);
                }
            }
        };
        public static class S9 extends StmTop {
            private static TopState singleInstance = new S9();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    System.out.println(GetInstance().getClass() + "entry");
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                switch( _EventId.values()[nEventId] ){
                case E1:{
                    pStm.m_bIsExternTrans = true;
                    pStm.BgnTrans( pContext, S91.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                case E2:{
                    pStm.BgnTrans( pContext, S92.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                case E3:{
                    pStm.BgnTrans( pContext, S11.GetInstance(), InitPt.GetInstance() );
                    ((MainStm)pStm).m_S111S111Stm.Reset(pContext, pStm, S111Stm.Entry1.GetInstance());
                    ((MainStm)pStm).m_S112S112Stm.Reset(pContext, pStm, S112Stm.Entry1.GetInstance());
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                default: break;
                }
                return bResult;
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                }
            }
        };
        public static class S91 extends S9 {
            private static TopState singleInstance = new S91();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    super.Entry( pContext, pStm );
                    System.out.println(GetInstance().getClass() + "entry");
                    ((MainStm)pStm).m_pS9History = S91.GetInstance();
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                return bResult ? bResult : super.EventProc( pContext, pStm, nEventId, pParams );
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                    super.Exit(pContext, pStm);
                }
            }
        };
        public static class S92 extends S9 {
            private static TopState singleInstance = new S92();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    super.Entry( pContext, pStm );
                    System.out.println(GetInstance().getClass() + "entry");
                    ((MainStm)pStm).m_pS9History = S92.GetInstance();
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                return bResult ? bResult : super.EventProc( pContext, pStm, nEventId, pParams );
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                    super.Exit(pContext, pStm);
                }
            }
        };
        public static class S19 extends StmTop {
            private static TopState singleInstance = new S19();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    System.out.println(GetInstance().getClass() + "entry");
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                switch( _EventId.values()[nEventId] ){
                case E0:{
                    pStm.BgnTrans( pContext, S20.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                default: break;
                }
                return bResult;
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                }
            }
        };
        public static class S20 extends StmTop {
            private static TopState singleInstance = new S20();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    System.out.println(GetInstance().getClass() + "entry");
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                switch( _EventId.values()[nEventId] ){
                case E1:{
                    pStm.BgnTrans( pContext, StmTop.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                case E2:{
                    pStm.BgnTrans( pContext, S11.GetInstance(), InitPt.GetInstance() );
                    ((MainStm)pStm).m_S112S112Stm.Reset(pContext, pStm, S112Stm.Entry2.GetInstance());
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                default: break;
                }
                return bResult;
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                }
            }
        };
        public static class S10 extends StmTop {
            private static TopState singleInstance = new S10();
            public static TopState GetInstance() { return singleInstance; }
            public void Entry(Context pContext, Statemachine pStm){
                if( pStm.IsEnterable(GetInstance()) ){
                    System.out.println(GetInstance().getClass() + "entry");
                }
            }
            public boolean EventProc( Context pContext, Statemachine pStm, int nEventId, EventParams pParams ){
                boolean bResult = false;
                pStm.m_pSourceState = GetInstance();
                switch( _EventId.values()[nEventId] ){
                case E1:{
                    pStm.m_bIsExternTrans = true;
                    pStm.BgnTrans( pContext, S10.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } break;
                case E2:{
                    int n = InputValue("Enter condition1: ");
                    if (n == 0) {
                        pStm.BgnTrans( pContext, S7.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } else if (n == 1) {
                        pStm.BgnTrans( pContext, S11.GetInstance(), InitPt.GetInstance() );
                        pStm.EndTrans( pContext );
                        bResult = true;
                    } else {
                        pStm.BgnTrans( pContext, S18.GetInstance() );
                        ((MainStm)pStm).m_S18S18Stm.Reset(pContext, pStm, S18Stm.Entry1.GetInstance());
                        pStm.EndTrans( pContext );
                        bResult = true;
                    }
                } break;
                default: break;
                }
                return bResult;
            }
            public void Exit(Context pContext, Statemachine pStm) {
                if (pStm.IsExitable(GetInstance())) {
                    System.out.println(GetInstance().getClass() + "exit");
                }
            }
        };
        public boolean DefaultTrans( Context pContext ){
            boolean bResult = false;
            Statemachine pStm = this;
            bResult |= m_S18S18Stm.DefaultTrans( pContext );
            bResult |= m_S111S111Stm.DefaultTrans( pContext );
            bResult |= m_S112S112Stm.DefaultTrans( pContext );
            do {
                if (m_pCurrentState == StmTop.GetInstance() && m_pPseudostate == MainStm.InitPt.GetInstance()) {
                    pStm.BgnTrans( pContext, S1.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } else if (m_pCurrentState == S2.GetInstance() && m_pPseudostate == MainStm.InitPt.GetInstance()) {
                    pStm.BgnTrans( pContext, S3.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } else if (m_pCurrentState == S6.GetInstance() && m_pPseudostate == MainStm.InitPt.GetInstance()) {
                    pStm.BgnTrans( pContext, S7.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } else if (m_pPseudostate == MainStm.Junction.GetInstance()) {
                    pStm.BgnTrans( pContext, S18.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } else if (m_pCurrentState == S18.GetInstance() && m_pPseudostate == S18Stm.Exit1.GetInstance()) {
                    pStm.BgnTrans( pContext, S19.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } else if (m_pCurrentState == S11.GetInstance() && m_pPseudostate == MainStm.InitPt.GetInstance()) {
                    pStm.BgnTrans( pContext, S12.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } else if (m_pCurrentState == S9.GetInstance() && m_pPseudostate == MainStm.InitPt.GetInstance()) {
                    pStm.BgnTrans( pContext, S91.GetInstance() );
                    pStm.EndTrans( pContext );
                    bResult = true;
                } else if (m_pCurrentState != m_pPseudostate && m_pPseudostate instanceof StmTop) {
                    pStm.BgnTrans( pContext, (TopState)m_pPseudostate );
                    pStm.EndTrans( pContext );
                } else {
                }
            } while (false);
            return bResult;
        }
        public boolean Reset(Context pContext, Statemachine pParentStm, Pseudostate pEntryPoint) {
            m_pParentStm = pParentStm;
            if (pEntryPoint == null) {
                if (IsFinished()) {
                    m_pPseudostate = InitPt.GetInstance();
                }
            } else {
                if (IsFinished()) {
                    m_pPseudostate = pEntryPoint;
                    return false;
                } else {
                    m_pPseudostate = pEntryPoint;
                }                    
            }
            if (pEntryPoint != null) {
                m_S18S18Stm.Reset( pContext, this, pEntryPoint );
                m_S111S111Stm.Reset( pContext, this, pEntryPoint );
                m_S112S112Stm.Reset( pContext, this, pEntryPoint );
            }
            return RunToCompletion(pContext);
        }
        public boolean EventProc(Context pContext, int nEventId, EventParams pParams){
            boolean bResult = false;
            m_pLCAState = TopState.GetInstance();
            bResult |= m_S18S18Stm.EventProc( pContext, nEventId, pParams );
            bResult |= m_S111S111Stm.EventProc( pContext, nEventId, pParams );
            bResult |= m_S112S112Stm.EventProc( pContext, nEventId, pParams );
            bResult = m_pCurrentState.EventProc(pContext, this, nEventId, pParams);
            RunToCompletion(pContext);
            return bResult;
        }
        public boolean IsIn(TopState pCompositeState) {
            if (m_S18S18Stm.IsIn(pCompositeState)) { return true; }
            if (m_S111S111Stm.IsIn(pCompositeState)) { return true; }
            if (m_S112S112Stm.IsIn(pCompositeState)) { return true; }
            if (super.IsIn(pCompositeState)) { return true; }
            return false;
        }
        public boolean Abort(Context pContext) {
            m_pSourceState = StmTop.GetInstance();
            BgnTrans(pContext, StmTop.GetInstance());
            EndTrans(pContext);
            return true;
        }
        public boolean IsFinished() {
            return m_pCurrentState == StmTop.GetInstance() && m_pCurrentState == m_pPseudostate;
        }
        public MainStm(){ super(StmTop.GetInstance(), StmTop.GetInstance()); }
    };
    public  ContextImpl(
        int _attribute0,
        Composition _aComposition
    ) {
        super( _attribute0, _aComposition );

        attribute2 = 123;
        attribute3 = 789;
    }                                                                                           
    private int attribute2;                                     
    private int attribute3;                                     
    MainStm mainStm = new MainStm();                            
    public boolean Start() {
            mainStm.Abort(this);
        return mainStm.Reset(this, null, null);
    }
    public boolean EventProc(int nEventId, EventParams pParams) {
        return mainStm.EventProc(this, nEventId, pParams);
    }
    public boolean IsIn(TopState pState) {
        return mainStm.IsIn(pState);
    }
}
